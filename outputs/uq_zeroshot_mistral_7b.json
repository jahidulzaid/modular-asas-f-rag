[
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "no submission.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane manages a global view of the network and defines how routing should be done in the network.\r\nthe data plane does execute the forwarding of packets based upon the decisions taken by the control plane.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "the response correctly states the responsibilities of both planes, but the sdn controller's tasks are missing.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane defines routers and manages the network graphs.\r\nthe data plane manages the forwarding of packets (they make that the packets can flow through the network from host to host.\r\nthe dsn controller has many tasks, being two of the them the configuration of the forwarding tables and the collections of traffic statistics.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "-\tresponsibilities:\r\n      o\tdata plane: switches are responsible for pure forwarding and therefore the connectivity throughout the network. \r\n      o\tcontrol plane: (multiple) servers provide logically centralized control for routing (defining the routes/routing tables and managing the network graph)\r\n-\ttasks of the sdn controller:\r\n      o\timplements south and northbound interfaces to the data plane and other control plane units respectively.\r\n      o\tprovides the routing logic, defines routes (e.g. dijkstra) and manages the network graph (e.g. collecting statistics)",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control plane is logically centralized and responsible to define routes and manages network graphs while data plane is physically distributed and responsible for forwarding of packets.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "the response correctly states the responsibilities of both planes, but the sdn controller's tasks are missing.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control plane: the control plane computes the forwarding rules and install them on the data plane\r\n\r\ndata plane: the data planes responsibility is the forwarding of packets to the right outgoing device port based on the forwarding rules.\r\n\r\nsdn controller tasks:\r\n- discovers the network topology\r\n- configures forwarding tables",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "data plane: the data plane is responsible for forwarding a packet from one open flow switch to the next to get a packet from its sender- through the network - to its receiver. the data plane implements the logic the control plane predefines. \r\n\r\ncontrol plane: the control plane is often a physically distributed but logically centralized unit, that defines routing and manages the network graph. its responsible for calculating the optimal routes through the system, converging the routing algorithms quickly in case of disturbances and providing the sdn controller with the correct flow table entries. \r\n\r\nthe controller has an interface to both the data plane as well as the control plane and acts as a connecting link between the two planes. \r\nexemplary tasks the controller has to take care of are: configuration of forwarding tables, injecting packets into the data plane, dealing with packets a switch does not know how to handle or collecting traffic statistics.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the sdn controller implements the control plane, which is an abstraction, so stating control plane provides correct flow entries to the sdn controller is not logically correct. the controller has an interface to the control logic, not the control plane, as it is part of the control plane. apart from this, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane inludes the control logic. they define the routes for the packets and therefore manage the netowork graph. the control plane is logically centralised and installs the routing tables into the data plane. \r\nthe data plane exists on the level of the routers, and is in charge of forwarding the packets in the network. \r\n\r\nthe sdn controller installs the flow tables into the switches and receives the requests of the network switches/routers.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the data plane is in the switches they ensure that packets flow trough the network. they get their rooting tables from the control plane and just execute the commands from the control plane.\r\nthe control plane is outside of the switches in one or multiple server and handles the logic part. it takes care of the rooting tables.\r\nit also does load distribution between controller instances, collection of traffic statistics and the discovery of the topology.\r\nin comparison of normal network the logic is centralized and not decentralized. this greatly simplifies the implementation of control logic because you have a global view of the network.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "the response correctly states the responsibilities of both planes, but the sdn controller's tasks are missing.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane is logically centralizes and responsible to define routes and manage the network graph. the data plane is responsible of the forwarding of the packets.\r\nthe sdn controller not only implements the control plane, it also implements an interface to the switches (southbound) and an interface with control logic (northbound).",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "empty submission.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane is responsible for managing the network graph and updating the flow tables in the data plane via southbound interface.\r\ndata plane is responsible for forwarding incoming packets by using the forwarding tables.\r\nthe sdn controller configures the forwarding table and collects the traffic statistics.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the two main components in the sdn are the control plane and the data plane. the data plane includes the various hardware network elements that are responsible for the actual routing of the packets according to the specifications of the control plane. control plane is responsible for the defining of routes and managing network graphs. data plane is responsible for the forwarding of packets. \r\n\r\ntwo of the most important tasks to be controlled by the controller include\r\n- routing the data packets through the network\r\n- the management of all network components involved",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the stated sdn controller task of routing the data packets is incorrect because the actual forwarding through the network is performed by the data plane. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "no response.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the data plane, represented by the switches in the network, is responsible for forwarding packets in the network. the control plane, represented by one or more centralized controls, is responsible for calculating the routes in the network and maintaining the network structure. the sdn controller e.g. takes care of updating the forwarding tables in the switches and handling packets coming in from switches that are unable to process these packets.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane is the logical centralization of the network. it contains all the control logic as well as the network topology, and is located within the sdn controller.\r\ndata planes are distributed between the controller and the individual machines in the network. they make up the routes and forward packets.\r\n\r\ntasks of the sdn controller:\r\nmust create and maintain the forwarding tables for the entire network\r\nhandles events for incoming packets",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "the two tasks of the sdn controller are correct. however, the data plane is responsible for packet forwarding and not for defining the routes. additionally, the responsibility of the control plane is missing in the response.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane knows the network topology and does the routing. the data plane has only limited knowledge of the network and forwards data according to the routing done in the control plane. \r\n\r\nthe sdn controller computes the routing, distributes the result to all the nodes in the data plane and discovers the topology.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the responsibility of the data plane is still the forwarding of packets like \"normal\" switches do but the logic behind it is removed.\r\nthe control plane is now responsible for the logical part, it defines the routes in the network and manages the network graph.\r\nthe sdn controller takes care of implementig the control plane and of implementing the southbound interface to the switches.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "replication: \r\nclients need to implement the openflow standard in order to use the slave. otherwise only primary will be used and thus has higher load.\r\n\r\npartitioning: \r\nintroduces overhead because control planes have to coordinate decisions. preserving consistency is not an easy task.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the task is to state the control and data plane's responsibilities, including two roles of sdn controller instead of explaining replication and partitioning.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control plane:\r\nit is responsible for deciding how the routing is done over the network (configuration) and it also manages the network graph (management).\r\n\r\ndata plane:\r\nit is responsible for forwarding the packets according to the rules (configuration) the control plane supplies.\r\n\r\nsdn controller tasks (controller implements the control plane):\r\na) collects traffic statistics (network state, performance)\r\nb) discovers topology (responds to new devices) \r\n\r\n[of course, it also takes care of configuring the forwarding rules, but that answer seemed too obvious to me]",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane consist of one or more servers (physically distributed). it acts as a logical centralized control unit, which is able to serve information about the network, in order to define how the routing is done over the network (logically centralized).\r\n\r\nthe data plane provides the connectivity through the network, so that packets can flow through the network from host to host using forwarding.\r\n\r\ntasks of sdn controller:\r\n- provides southbound interface to data plane e.g. to configure forwarding tables\r\n- implementation of control plane",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "-control plane :\r\nthe control plane defines the routes, manages the network graph, configures the hardware,\r\ncreates the routing for forwarding of data packets to the target. \r\n\r\n-data plane : \r\n\r\nthe data plane forwards data packets and receives control informations \r\nfrom the network controller.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "the response correctly states the responsibilities of both planes, but the sdn controller's tasks are missing.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "data plane refers to all the functions and processes that forward packets/frames from one interface to another inside a network. these are software or hardware components of the router or switch related to routing/forwarding user data/traffic from one interface to another. in the case of routers, routing table and/or forwarding table and the routing logic constitute the data plane function. \r\n\r\ncontrol plane refers to all the functions and processes that determine which path to use. in the case of a router, these are functions/components of the router which are responsible for populating the routing table/forwarding table and hence enable the data plane functions. examples are routing protocols such as ospf, eigrp, bgp, is-is, ldp, etc\r\n\r\nsdn controller tasks include inventorying what devices are within the network and the capabilities of each, gathering network statistics, configures forwarding tables for the switches and discovers the network topology.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the responsibility of the control plane is to defining routes and managing the network graph.\r\nthe responsibility of the data plane is the forwarding of packets.\r\n\r\n\r\ntasks of the sdn controller:\r\nthe sdn controller has a northbound interface and a southbound interface.\r\n- it is responsible for implementing the control plane  (northbound interface) and manages the global state of the network\r\n- it is responsible to communicate with the data plane (switchtes) on the southbound interface",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane defines routes and manages the network graph. the data plane is responsible for packet forwarding.\r\ntasks of the sdn controller: configuration of forwarding tables; collection of traffic statistics.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane is concerned with all kinds of control logic like defining routes and managing the network graph. \r\n\r\nthe data plane just forwards incoming packets with the information it gets from the control plane. \r\n\r\nthe sdn controller has two main tasks. the first is the configuration of forwarding tables in the routers/switches of the data plane. the second is discovering the topology of the network and collecting statistics used to create flow tables.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control plane:controller in this can be physically distributed in many  ways as no standard way of distribution defined.\r\nit is logically centralized and the distribution is transparent to control logic.\r\nit allows for global view onto the system and defines the routing table.\r\nit also deal with failures and increases scalability.it also manages network graph.\r\n\r\ndata plane:it is responsible for  forwarding of packets.it manages forwarding information base. switching is done with respect to the flow table .\r\n\r\ntasks of sdn controller are:\r\n1.configuration of forwarding tables\r\n2.injecting packets \r\n3.collection of traffic statistics\r\n4.discovery of topology",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "no response.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane is responsible for routing by configuring the switches accordingly. this can happen proactively, before any traffic occurs, or reactively, while the network is operated and building up the pipeline of flow tables on the fly.\r\nthe data plane is responsible for forwarding. each switch uses its flow table pipeline for that and looks up where a packet has to be routed to, whereas any packet information that identifies a communication relation, typically combinations of the header fields of the data link, network and transport layer, is used.\r\none task of an sdn controller is interfacing with control logic via its northbound interface.\r\nfurthermore, the sdn controller implements a southbound interface to the switches in order to configure forwarding tables for them, inject packets, detect events from switches like newly received packets, collect traffic statistics or discover the topology.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane defines the routes and manages the network graphs. the data plane is responsible for forwarding the packets. the sdn controllers implements the control plane and the southbound interface to switches.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "responsibility of contorl plane: implement the logically centralized control, in order to define routes and manage network graph.\r\nresponsibility of data plane: forwarding packets and reconfiguring network when changes in the network occur.\r\ntask 1: configuration of forwarding tables.\r\ntask 2: collection of traffic statistics.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "reconfiguration of the network is the task of the control plane, not the data plane. apart from this, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the data plane is responsible for the actual forwarding of the traffic which means in particular to go through the flow tables and check which flow entry matches the incoming packet.\r\nthe control plane defines routes and manages the network graph. these abstract routes/the graph are then translated into flow tables so that the data plane can then route/switch traffic based on the route/graph.\r\n\r\nthe sdn controller implements the northbound and the southbound interface. as part of the south bound interface it configures forwarding tables and listens on events from switches.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control plane: defines the routes for forwarding and manages the network topology.\r\ndata plane: takes care of forwarding of packets in a way the control plane dictates.\r\n\r\ntasks of the sdn controller:\r\nconfiguration of forwarding tables\r\ntrack and analyze network traffic",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "no response.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control plane is actually the control logic which is removed and separated out of physical switches and control plane could consist of multiple servers and basically implement logically centralised control in order to manipulate how the routing process is done over the network. \r\n\r\ndata plane is the data forwarding process which is hosted and done by the actual switches themselves separately from the servers which actually hosting the control plane. \r\n\r\ntwo tasks the sdn controller takes care of: \r\n- define routing scheme for data flow. \r\n- manage network graph and topology in a centralised manner.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane defines the logic for routes and manages the network graph. it is responsible for all decision making. \r\nthe data plane is reponsible only for forwarding of packets, no decisions are made here, therefore, this allows for packets to be forwarded very fast.\r\nsdn controller is usually a distributed system, it is responsible for implementing the control plane and for implementing the southbound interfaces to switches, which includes configuration of forwarding tables, injecting packets, etc.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane has to take care of defining the routes through the network, managing the network graphs and creating the flow tables for the data plane. the data plane has the responsibility to forward and modify packets based on the flow tables provided by the data plane as well as provide feedback about the network health and packet forwarding metrics to the control plane. the sdn has to configure the forwarding tables for the switches and routers and discover the topology of the network to maximize the throughput of the network and route around link failures.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control plane:\r\nresponsible for defining routes and managing the network graph.\r\n\r\ndata plane:\r\nresponsible for forwarding packets.\r\n\r\ntwo of the sdn controller's tasks:\r\n- configure the forwarding tables\r\n- discover the network topology",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "responsibilities of control plane: help to define network routes and it also helps to manage the network graphs. \r\nresponsibility of data plane: actual forwarding of packets through router and switches. \r\n\r\ntwo tasks the sdn controller takes care of:\r\n[1] it simplifies implementation of control logic while maintaining the consistent global view of the network.\r\n[2] it must increase and maintain performance of control: to maintain optimum qos requirements for different network applications.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the stated tasks are more like the benefits of the sdn controller, especially the first task. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "no response.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane is responsible for routing the packets through the network. the control plane does that with defining routes and managing the network graph. \r\nthe data plane is responsible for forwarding the packets.\r\n\r\nthe sdn controller implements the southbound interface for control of the data plane (for example configuring forwarding tables and injecting packets) and interfaces with the control logic through the northbound interface.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane is responsible for defining the routes and managing the network graphs. the data plane is responsible for forwarding the packets. the sdn controller implements the control plane and implements the southbound interface to the switches.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control plane : defines routes and manages network graph\r\ndata plane : forwarding the packets\r\n\r\ntasks of sdn controller :\r\n1. implements control plane\r\n2. implements southbound interface to switches#\r\n3. configuration of forwarding tables\r\n4. injecting tables",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control plane:\r\nis the part of the sdn, that handles the signal traffic. it defines routes and manages network graphs.\r\n\r\ndata plane:\r\nhas the task of actually forwarding packets. most packets are automatically transported by switches and forwarding tables and therefore stay inside the data plane. \r\n\r\ntwo task examples of the sdn controller:\r\nthe sdn controller configures the forwarding tables.\r\nit also collects statistics about traffic.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane decides where to send the data by discovering the network and saving the found connections.\r\nthe data plane takes care of the actual forwarding of the data according to the given direction by the control plane.\r\n\r\ntasks of the sdn controller:\r\n\u2022\tconfiguration of forwarding tables\r\n\u2022\tdiscovery of topology",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "no response.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "no response.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane is to define routers and manage network graph. the data plane aims to forward the packets. sdn controller is able to implement control plane and southbound interface to switches",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the data plane is the actual network in which packets are sent from node to node - it\u2019s the place where the actual forwarding happens. so the data plane consists of all end systems as well as switches who are simplified in comparison to normal networks and just handle the forwarding process very efficiently. the controlling of the switches - so to say the definition of routes by forwarding rules - happens in the control plane, which consists of different physically separated servers that run so called control logic units. their task is to evaluate the current traffic on the data plane as well as the network graph and deciding about new routes and forwarding table entries, which are then communicated to the switches. the sdn controllers are hosts that implement the control plane and the southbound interface to the switches. they have several tasks, for example especially the configuration of the forwarding tables in the switches, but also the collection of statistical data about the network traffic from the forwarding switches.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane can have one or more controllers and is responsible for defining the routes and managing the network graph. the control plane then tells the switches and routers which routes they must use.\r\nthe data planes are the switches and routers that build the network. they are responsible for forwarding the packets, accordingly to the routes defined by the controller.\r\nso, the sdn controller configures switches/routers forwarding tables and can collect traffic statistic so that can know the network state.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane can be implemented via a/multiple server/s that are defining the routes the packages are going to take in the network. they also install the routing tables in the switches and therefore are managing the network graphs.\r\n\r\ndata plane manages the forwarding of the packages between the switches in general.\r\n\r\ntasks of the sdn controller:\r\n- configures forwarding tables\r\n- injects packages",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control plane\r\nlogically centralized view of the network topology. defines routes and manages the network graph. it configures forwarding tables and discovers the network topology through the southbound interfaces and provides an interface for control application via the northbound interface.\r\n\r\ndata plane\r\nimplemented in routers and switches. main task is the forwarding of packages by the rules in the forwarding tables. it also collects statistical data in the meter table.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "the response correctly states the responsibilities of both planes, but the sdn controller's tasks are missing.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "no response.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane defines routes and manages the network graph. the data plane is responsible for forwarding packets.\r\nthe tasks of the sdn controller are implementing the control plane and implementing the southbound interface to switches (including e.g. configuration of forwarding tables, injecting packets)",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane defines routes and manages the network graph. control can be either distributed or centralised. the data plane can focus solely on the forwarding of packets. a sdn controller is a server process, which firstly implements the control plane and secondly implements the southbound interface to switches.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "no submission.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control plane defines routes and manages network graph. it forms the logically centralized control (to plan paths etc.). \r\ndata plane forwards the packets inside the network (by matching the incoming packets with the entries of the forwarding table (which is defined by the control plane)). \r\nsdn controller configures forwarding tables for the switches and discovers the network topology.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control plane need to mange the routing logic.\r\nthe data plane needs to act according to the routing logic of the control plane.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "the response correctly states the responsibilities of both planes, but the sdn controller's tasks are missing.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control plane: control plane defines routes and manages network graph\r\n\r\ndata plane: data plane is responsible for forwarding of packets\r\n\r\nsdn controller:\r\n- implementation of control plane\r\n- implementation of southbound interface to switches",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "no response.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane defines routes and manages the network graph. \r\nthe data plane is responsible for forwarding of packets. \r\n\r\nsdn controller task\r\n-configuration of forwarding tables\r\n-collection of traffic statistic \r\n-injecting packets",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "no submission.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane defines routes and manages the network graph.\r\nthe data plane forwards the packets.\r\nthe sdn controller implements control plane and southbound interface to switches.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane defines the network routes and manages the network graph in a logically centralized but physically distributed way. the data plane is responsible for the forwarding of packets according to the routes specified by the control plane.\r\n\r\nthe sdn controller is mainly responsible for implementing the control plane; interfacing with the control logic via the northbound interface; and communicating with the switches on the data plane via the southbound interface (for discovery of topology, injecting packets, configuration of forwarding tables, etc).",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane takes care of the routing decisions by defining the routes as well as managing the network graphs. the data plane is responsible for the packet forwarding.\r\nthe sdn controller implements the control plane as well as the southbound interface. it includes tasks or features like configuring forwarding tables and discovering topologies.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "no submission.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane is logically centralized on the sdn controller and is responsible to define routes and manage the network graph.\r\n\r\nthe data plane is in the individual switches and is responsible for the forwarding of packets.\r\n\r\ntasks of the sdn controller:\r\n- configures the forwarding tables for the switches.\r\n- discovers the network topology.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control plane: defines routes, manages network graph \r\ndata plane: forwarding of packets \r\n\r\ntasks:\r\n1.controller proactively \u201cpushes\u201c flow table entries onto switches \r\n2.controller receives the packet-in event and forward to control logic.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the data plane is responsible of forwarding the packets through the network to their respective destinations.\r\n\r\nthe control plane takes care of gathering information about the network to compute routes on this global view. also it is responsible to keep the topology represenation consistent and up to date.\r\n\r\ntasks of the sdn controller:\r\n- configuration of forwarding tables\r\n- collection of traffic statistics",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control planes define routes and manage the network graph. data planes forward packets. the controller takes care of configuration of forwarding tables and collection of traffic statistics.\r\nsdn controller provides a northbound interface to the control plane and a southbound interface to the data plane.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the controller has a northbound interface to the control logic, not the control plane, as it is part of the control plane. apart from this, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "data plane: functions and processes that forward packets from one interface to another\r\ncontrol plane: funcitons and processes that are used for routing",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "the response correctly states the responsibilities of both planes, but the sdn controller's tasks are missing.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "empty submission.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control plane:\r\nthe control plane is responsible for managing the data plane components and calculating optimal routes in the network. it also provides a layer of abstraction from the physical network architecture for applications and users. \r\n\r\ndata plane:\r\nthe data plane consists of the actual routers and switches that are connected to each other. in the data plane, the forwarding process is done based on the logic in the control plane. \r\n\r\ntasks of the sdn controller:\r\n- configures the routing tables of the data plane\r\n- collects trafic statistics about the underlying network",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "no response.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control plane: is connected to the switches. does the routing calculation and sends it to the switches.\r\n\r\ndata plane: gets the best paths from the control plane and forwards the packets on these paths.\r\n\r\nthe sdn controller implements the control plane as well as the southbound interface, to communicate with the data plane (set up forwarding tables and network topology graph) and the northbound interface, to be configurable by the control logic.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane is responsible for managing the network graph, as well as defining the routes in the network, which can be initiated by the routers/switches themselves or by the control plane. the data plane is responsible for the actual forwarding of the data traffic in the network. the sdn controller has the task of managing \\ configuring all network components involved in a process together with the collection of traffic statistics.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane defines the route and manages the network graph.\r\nthe data plane manages the forwarding of packets.\r\nthe sdn controller collects traffic statistics and configures the forwarding tables.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control plane: defines routes and manages network graph.\r\ndata plane: forwarding of packets.\r\n\r\n\r\nsdn controller takes care of: 1. implements control plane.\r\n                                               2. implements southbound interface to switches.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "switches/routers implement the data plane and forward the information.\r\n\r\nrouting tables implement the control pane and manage the network topology and where to forward information.\r\n\r\n\r\n\r\nthe sdn controller manages the flow tables, injects packets, handles package receival and manages traffic statistics.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the control plane decides the routing tables, not the other way round. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane manages the flow routes and is therefore essentially responsible for pro and reactive routing. the data plane is just for forwarding packets and is the \"real\" network, which is routed by the control plane. the sdn controller is responsible for configuring the forwarding tables and collecting traffic statistics among other tasks.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control plane: controle plane defines routes and manages network graphs (i.e. defining routing protocols, routing algorithms, and spanning trees).\r\n\r\ndata plane: is responsible for the forwarding of packets.\r\n\r\nsdn controller is a server process executed on a host. it implements control plane and a southbound interface to switches:\r\n1. configuration of forwarding tables.\r\n2. injecting packets.\r\n3. events from switch (packet-in).\r\n4. collection of traffic statistics.\r\n5. discovery of topology interfaces with control.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane manages the network graph, i.e. all connected notes and how they are connected. it also defines all the routers inside the network.  \r\n\r\nthe data plane is, as the name suggests, only used for data transfer, strictly speaking the forwarding of packets/frames.\r\n\r\nthe sdn controller implements the control plane as well as the southbound interface to switches. this includes the following tasks:\r\n- configuring the forwarding tables\r\n- discovery of topology\r\n- collection of traffic statistics",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane is the control logic entity responsible for the creation and maintenance of routing paths and tables and the network graph. present on the sdn controller.\r\n\r\n\tthe data plane is responsible for the actual forwarding of the packets as defined in the routes provided by the control plane. present on the routers and/or switches.\r\n\r\n2 tasks that the sdn controller takes care of:\r\n\r\nconfiguration of forwarding/routing tables\r\ndiscovery of the network topology.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "no submission.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "no response.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "no submission.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "no response.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "empty response.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is empty.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane defines the routes and manages the network graph therefore controls the flow of the network. the data plane on the other hand is responsible for forwarding incoming packets therefore executes the flow. \r\n\r\nsdn controller: \r\n-implements control plane\r\n-southbound interface to switches",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the responsibility of control plane is defining routes and managing network graph, it refers to all the functions and processes that determine which path to use. \r\nthe responsibility of data plane is forwarding of packets from one interface to another.\r\n\r\ntasks of the sdn controller: \r\n1. via southbound interface to switch the information. \r\n2. via northbound interface to communicate with control logic(controling \u201dapplication\u201c).",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the response is partially correct because the first task \"southbound interface to switch the information\" is ambiguous. sdn controllers implement a southbound interface to communicate with the data plane. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the responsibilities of control plane are routes definition, routers protocol definition, network graph management and network middlebox configuration, which determines how packets should be forwarded, while the responsibilities of data plane are traffic (packets) forwarding according to control plane logic. data plane decides what to do with the packet, where to transfer, whether to encapsulate or decapsulate the packet.\r\n\r\nthe tasks of sdn controller:\r\nswitching information via southbound interface\r\nconfigurating forwarding table\r\ngathering network statistics\r\ndiscovering the topology\r\ninterfacing with control logic via northbound interfaces\r\ninventorying what devices are within the network and the capabilities of each",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane is logically centralized. it defines the routes and manages the network graph. the data plane is responsible for actually forwarding the data packets.\r\n\r\ntasks of sdn controller:\r\n- communicate to the switches in the data plane. configure the forwarding tables and handle packet_in events.\r\n- store and manage routes as well as forwarding rules",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane defines routes and manages the network graph. therefore, the sdn controller collects information from the switches, detects the network topology, and computes and configures the forwarding tables. the data plane receives the forwarding tables from the control plane and takes actions on the packets according to these rules. if the data plane has no entry for a new packet, it may drop it or ask the control plane for a new rule (depends on the configuration).",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "control planes are responsible for defining all logical operations in the network, i.e. defining and distributing routes to the switches and managing the network graph.\r\ndata planes act on the decision made by control planes by forwarding packets based on the routes they receive from the control plane.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "the response correctly states the responsibilities of both planes, but the sdn controller tasks are missing.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the data plane is responsible of the forwarding of the packets. whereas the control plane implements the control logic to manipulate how the routing is done over the network and manages the network.\r\n\r\nthe sdn controller includes the routing protocol and therefore takes care of finding the best path of the network. it installs the routing table inside the switches and, if something changes in the network, it manages the re-routing.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the responsibilities of both planes and the tasks of the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "software-defined networking (sdn) introduces separate control and data planes to manage network flows. please explain the responsibilities of each plane in 1-2 sentences. further, name two tasks the sdn controller takes care of. ",
    "student": "the control plane defines routes and manages the network graph in the network. \r\nthe data plane is responsible for the forwarding of the packages. \r\n\r\nthe control plane can consist of multiple servers that implement a logically centralized controller to define the rules about routing in the network. that means the routing protocol is handled in the control plane.\r\nthe data plane servers store the routing table in the switches, which know how to route the packages through the network.",
    "reference": "['control plane: the control plane is logically centralized, but can be physically distributed\\n(multiple coordinating control servers for higher availability and scalability).\\none of the following responsibilities  should be given:\\n\u25cf decides the route for the packet/data\\n\u25cb control servers manage the network graph, define routes, and update the\\nflow tables of connected switches.\\n\u25cf handles unprocessed packets coming in from the data plane\\ndata plane: responsible for packet forwarding. individual switches just execute\\nactions according to their flow tables decided upon by the control plane.\\n\\nthe following are the tasks taken care of by the controller:\\n\u25cf configuration of forwarding tables\\n\u25cf injecting packets\\n\u25cf events from switch (packet-in)\\n\u25cf collection/monitoring of traffic statistics\\n\u25cf discovery of topology\\n\u25cf inventorying what devices are within the network and the capabilities of each device\\n\u25cf interfaces with control logic (control \u201capplication\u201d) via the northbound interface(s)\\n\u25cf implements a southbound interface to interact with the data plane.\\n\u25cf implements the control plane.']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "the response correctly states the responsibilities of both planes, but the sdn controller's tasks are missing.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "no submission.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\n- the control logic has a global view of the system, allowing for easier algorithms/programming.\r\n- the routing can be adapted in a flexible way based upon the used applications.\r\ndrawbacks:\r\n- the controller is complex to implement.\r\n- the control plane might be a bottleneck when not partitioned appropriately.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the two stated drawbacks cover a similar point: the high complexity of control servers. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\n1.the network control logic can be easily modificated making the software exchangeable .\r\n2.the complexity of the switch will be reduced by removing the control logic on the switchers and hosting it on servers.\r\ndrawbacks:\r\n1.one drawback is that if something were to happen to the controller, we wouldn't be able to create any new table or route.\r\n2.also the security that was provided by the switchers and physical routers will be lost, making a cyber attack possible.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "-\tbenefits:\r\n      o\teasier modification/management of the network logic through apis via the control plane possibly using high-level programming languages, without the need to modify each local router while achieving a faster \r\n                convergence. as an example, this is advantageous for complex networks as found in vlan or virtualization infrastructures while providing a consistent and secure layout for routing and firewall rules.\r\n      o\treduce the complexity of the local hw (data plane) by separating it from the control plan. \r\n-\tdrawbacks\r\n      o\tthe concept of sdns introduces new security issues to be tackled and is possibly more vulnerable for attacks or outages of not setup correctly.\r\n      o\tthe control plane requires additional complexity.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the stated drawbacks of sdn are partially correct. the first drawback doesn't explain what kind of security issues may occur with the implementation of sdn. also, sdn indeed requires a complex control plane but the response lacks what kind of complexities are there while designing the sdn controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "the benefits of sdn are, easy modification of the network control logic, it has api in order to program the network, it accommodates high-level programming languages, reduced switch complexity, it has an integrated system consisting of application and network, and it reduces the complexity of implementing control logic. one of the drawbacks of sdn is the security that came from physical routers and switches.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the second drawback is missing.  apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "one benefit of sdn is that it enables a global view and management of the system and its devices. a second benefit is that sdn supports high-level programming languages for its logical implementation.\r\na drawback of sdn is that the entire network infrastructure needs to be changed and reconfigured to use sdn. a second drawback is that there might be a single point of failure in sdn.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.875,
    "feedback": "the first advantage is partially correct because it does not clarify how the system's global view and management are advantageous. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\none benefit of sdn over traditional networking is, that as the logic is no more \"hard-coded\" in the routing process of each switch but an exchangeable software the network control logic can easily be modified without having to access physical routers. \r\nanother benefit of sdn is, that as the control logic is hosted on an external, logically centralized server, routers do not have to have a routing process and their complexity can therefore be reduced while maintaining the performance of forwarding in hardware.\r\n\r\ndrawbacks:\r\nfirstly, a controller with both a northbound interface to the control logic as well as a southbound interface to the data plane has to be implemented which is hard, as a lot of the overhead has been shifted to the controller. \r\nsecondly, as the control logic is no longer in every router, if a controller in the control plane fails or breaks down, all routers which draw their information from that controller are not longer usable until the controller has been fixed or another controller takes over. furthermore, information loss during the downtime can be a big factor.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits: \r\nflexibility: changes in the network like new protocols can be customized by software and do not need to be changed in hardware (which would results in buying new hardware) and can be done without the hardware manufacturer.  \r\nintegrated system: the routing is now an global challenge and therefore there is a global view on the network. the nodes can run on a lot less complex algorithm, while more functionalities can be considered. \r\n\r\ndrawbacks: \r\ntime to decide routing for unknown destinations: switches/routers do not decide for themselves, what to do with a new packet destination, and need to get the new information from the sdn controller, what produces challenges. \r\ncap theorem: admins have to decide, which two of the three cap properties are to use.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "whenever a not so common abbreviation(cap) is used, it is better to explain it. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "a benefit is that you can modify your network to your specific needs. you have an api to program the network and make use of high level programming languages in that process. \r\nit also reduces switch complexity because you could outsource the logic part of the switch to a separate server. the switch will only take care of the forwarding. --> individual switches get cheaper.\r\nbut on the controller side  the logic is more complicated than the logic in a single switch.\r\nthere also exists a cap problem where you always can only reach 2 of 3 cap properties maximum: consistency, availability, partitioning tolerance.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.875,
    "feedback": "while the controller's logic may be more complicated than the logic of a single switch, all the logic needed to make decisions over the entire traditional network should be the basis of comparison.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "pros:\r\n-with software defined networking, you reduce switch complexity compared to traditional networking by having the control logic hosted on a server and removing it from the switch.\r\n-you also drastically reduce the amount of work and likelyhood of errors when adjusting something in the network since the modification does not have to be done at every single device of the network.\r\ncons:\r\n-with sdn you lack hardware security. since you are eliminating the use of physical switches and routers you also lose the security that they bring (firewall).\r\n-you also have the vulnerability of the controller. having the controller manage the whole network you have a single point of failure, so it is important that it is completely secure.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "empty submission.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "one benefit of sdn is the easy modification of the network control logic, because you can change the software instead of the \u201chard-coded\u201d logic. another benefit is the reduced switch complexity, which is reached by the removal of the control logic from the switch and host it on servers. \r\n\r\na drawback is the implementation of a controller in a network, which isn\u2019t an easy task. a good technical understanding and networking skills are required.\r\nalso the compatibility with other networks should be given to ensure correct intermediate routing.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the response is partially correct because the drawback of network compatibility may also occur in traditional networking. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\na primary advantage of sdn networking is greater visibility throughout the network. in traditional networking, any security that impacts traffic is overarching. with sdn, it's granular. this means that engineers can selectively block malicious traffic throughout your network on a granular basis.\r\n\r\ntraditional networking requires significant people power and technical expertise spread throughout your network. each hardware component must be maintained, and connections must be monitored broadly. a sdn network allows all of these hardware components to be managed via a single touchpoint.\r\n\r\ndrawbacks:\r\none of the problems with virtualizing any infrastructure is the latency that arises as a result. the speed of the interaction with an appliance is dependent on how many virtualized resources are available. \r\n\r\none of the most significant security risk factors is the possibility of a compromised sdn controller attack at the control plane layer. due to the centralization design of the sdn, the sdn controller becomes the brain of the sdn architecture. attackers can focus on compromising the sdn controller in an attempt to manipulate the entire network.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "no response.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "one benefit of sdn is the increased flexibility as they can be reprogrammed more easily using standardized software interfaces and don't need the support of dedicated hardware like traditional networks. another benefit is the more centralized approach with a central sdn controller which reduces the load on the switches in the network and allows for more efficiency e.g. in calculating routes. a drawback of this centralized approach could be, that a single controller makes the network more vunerable to failures. also, sdns still lack in availability compared to traditional networks.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the second drawback is not correct and no explanation is provided to support it.  apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\nfreedom from hard-coded logic inside hardware like switches and routers, which not only costs less and as such is more scalable but also makes it easier to modify the network control logic. one may program the network themselves using high-level languages.\r\n\r\ndrawbacks:\r\nwith the loss of the hardware which is hard to modify, it is easier to attack the entire network if one has insider access to the controller. with the centralization of the network control it is easy to distribute new and modified logic to the entire network but implementing a bug-free controller may be increasingly difficult. a bug in the controller may bring the entire network down.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "software-defined networking allows to easily modify the network control logic. it also drastically reduces the switch complexity. \r\n\r\ntwo drawbacks of sdn are that the implementation of the controller is hard and that you have to update the whole network infrastructure if you want to switch from traditional routing to sdn.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the response does not explain why the implementation of the controller is hard. additionally, hybrid networks are also possible so that one does not have to switch the entire network's infrastructure.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "one benefit of sdn is, that it reduces the switch complexity which means that the switches still have the same forwarding performance but the control logic is removed and host on servers instead.\r\nanother benefit is, that sdn allows easy modifications of the network control logic. so by removing the \"hard-coded\" control logic from the switches this allows to modify it and get exchangeable software instead which can be adapted to the specific needs of the network.\r\na drawback is the cap problem which means, that for a distributed sdn controller only two out of three cap properties (consistency, availability, partitioning tolerance) are possible.\r\na second drawback is, that the logically centralization makes the implementation of the control logic simpler but the implementation of the actual controller harder, because all the logic is delegated to the controller which has to become very smart to provide a consistent view of a logically centralized network. if it's distributed the controllers have to communicate with each other, have to agree on a global view so some of the overhead is delegated to the controller.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "the control plane is a central point for decision making for the whole network. physically it can be distributed on multiple machines. it is separated from the data plane to simplify the decision making processes. it has a global view of the network which improves performance of the control plane.\r\nthe data plane is distributed on different devices in the network. its main purpose is the forwarding of the packets. it only has a small view compared to the control plane. is often implemented by using routers/switches and performance can be increased by utilising hardware for the forwarding (e.g. managed switch).",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.25,
    "feedback": "only one correct benefit is mentioned. the remaining response does not relate to the question.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\n- network control logic, which was previously embedded or realized in hardware, is now implemented in software and can therefore be modified more easily and with higher level programming languages.\r\n\r\n- switches do no longer have to support numerous different protocols and capabilities a customer might not need (but makes the product more complex), but because the control logic is removed (segregated), they are only responsible for forwarding packets based on configured rules. \r\n\r\ndrawbacks:\r\n- achieving and maintaining the global view makes the implementation of the controller harder, several aspects like availability and redundancy/scalability (control traffic between switches and controller puts load on the control network)\r\nhave to be concerned (cap problem).\r\n\r\n- while traditional network devices interact with each other to update the routing table in case of a link failure, the devices of the data plane segment that is disconnected from the controller will no longer be able to react to the failure (as this is the responsibility of the controller).",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "a benefit of sdn is that the complexity of switches is reduced as the control logic is hosted in the control plane while switches still support forwarding in hardware which ensures the same performance as in traditional networks. \r\nanother benefit is that the usage of high-level programming languages is possible in sdn, where traditional networking controllers/devices mostly have different and often low level programming languages through the presence of many different manufacturers.\r\n\r\na drawback of sdn is that the logical centralization of the controller complicates its implementation as the controller ideally should support all cap properties, i.e. consistency, availability, and partitioning tolerance.\r\n\r\nanother drawback is the security. if the centralized control plane is compromised the whole network can be controlled by a miscreant.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly explains the advantages and disadvantages of sdn.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "2 benefits: \r\n\r\n+sdn offers a api above to program the network and to have a good overview of its application.\r\nso the software defines the network, which makes the development and integration efficient, timesaving\r\nand flexible..\r\n\r\n+sdn has a reduced switch complexity. instead of using switches and routers, there is one centralized,\r\nintelligent controller and not many switches.\r\n\r\n2 drawbacks:\r\n\r\n-for implementing a sdn protcol with its controller you need to make changes in the whole network infrastructure\r\nfor sdn.\r\n\r\n- security concerns about the centralized sdn controller:\r\nthe central controller manages the network instead of switches and routers. so if the controller is not secure and\r\nrobust, this will be a problem.\r\nbefore routers and switches have had an integrated security, now with sdn the security belongs to the controller only, \r\nwhich could make the whole system and network vulnerable and could result into a lack of hardware security.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits of sdn: \r\n- reduce switch complexity (customers are able to configure their hardware without manufacturer-support and can buy the hardware they need, without additional features they might never use but still have to pay for)\r\n - more flexible (control logic performed by hosts which distributes transparency and allows for a global view onto the network)\r\ndrawbacks of sdn:\r\n- security problem of controller and hardware\r\n- cannot defense ddos attack",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the stated drawbacks are incomplete. the first statement did not clarify what sort of security or hardware problem sdn is vulnerable to. stating sdn offers no defense against ddos is not completely correct as sdn has its way to handle ddos though not to the same extent as traditional networking. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "advantages sdn:\r\n+ offers more flexibility than the traditional networking we learned so far because it is possible to modify the network control logic easily (move from \"hard-coded\" logic to exchangeable software).\r\n+ reduced switch complexity which leads to better performance.\r\n\r\ndisadvantages of sdn:\r\n- more complex because it requires more effort to built a network with the help of sdn\r\n- more complex because programming skills are required, you cannot use the built-in \"hard-coded\" logic anymore because sdn offers an api which allows to \"program\" the network so that the network is defined by the software application.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "it is highly debatable whether traditional networking or sdn requires more effort. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefit (1):  reduced switch complexity. instead of implementing the control logic in the switch itself, in sdn the control logic is implemented on servers.  \r\nbenefit (2): flexibility. in traditional networking the logic is implemented in a \"hard-coded\" fashion, whereas in sdn it is built in exchangeable software.\r\ndrawback (1): \"hard coded\" parts are more secure than software regarding hacker-attacks.\r\ndrawback (2): if the sdn controller is malfunctioning the system is not working at all.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.875,
    "feedback": "in the second drawback, if the controller is not working, the switches may still continue with their old forwarding tables, the changes in the forwarding table may not be implemented. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "a benefit of sdns is that they are solving the problem of increasing switch/router complexity by removing the control logic from the switches and putting it onto a logically centralized control plane, which is physically distributed to still ensure high availability and scalability.\r\nsdns offers easy modification of the network control logic.  software defines the network, high level programming languages are used, reducing the complexity of implementing the control logic. traditional network infrastructure lacks this kind of flexibility, as for example changes cannot be made to the hardware without support of the manufacturer.\r\none drawback of sdn is that the entire network infrastructure needs to change to implement the sdn protocol and controller, which means an increased cost for reconfiguration and new components and also training of new staff.\r\nalso, as with every new technology, it will introduce new security risks. possible vulnerabilities in sdn include a compromised controller, that can gain access to the network elements and manipulate actions or a malicious application, which is integrated with the controller using northbound apis.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "advantages:\r\n1.more flexibility: modification of the network control logic\r\n2.complexity is low for switches: as removal of control logic from switch and host it on servers.\r\n\r\ndisadvantages:\r\n1. the cap problem arises due to centralized routing as there are issues of consistency,availability,etc\r\n2.the servers have great complexity and its very difficult to maintain tables.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "no response.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "one such benefit would be the reduced switch complexity, since the control logic is removed from the switch and being hosted on servers.\r\nhowever, the same forwarding performance is preserved because the switches still support forwarding in hardware.\r\nthe application and the network can be realized as one integrated system via sdn which enables a global view onto the system, therefor simplifying the implementation of control logic.\r\ncontrol plane distribution is required to ensure failure tolerance, but for keeping control logic implementations simple, the distribution needs to be transparent for them, what makes the implementation of the controller harder. only two out of the three cap properties - consistency, availability and partitioning tolerance - are possible.\r\ndepending on how often the switches are reconfigured, the traffic between the control nodes and switches may become relevant and even slow down the overall network traffic. a solution to that would be a dedicated switch control network, but this might be expensive.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "two benefits of sdn are the increased flexibility and the reduced switch complexity. drawbacks are that sdn is slower and it costs more than traditional networking.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.25,
    "feedback": "in both benefits, it is not explained why sdn is more flexible or how the switch complexity decreases. the first drawback is incorrect because it does not specify the parameters that are slower. the second drawback is extreme and incorrect without any support/explanation.  apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\n1. support high-level programming languages for implementation of logic. this could benefit from powerful integrated developing environments.\r\n2. reduced switch complexity by removing control logic from switch and host it on servers.\r\n\r\ndrawbacks:\r\n1. sdn controls the network by controller. however programmer has to test that whether one controller works with the element in the network.\r\n2. since there is sdn-c layer, the routing security has to be focused on.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.875,
    "feedback": "in the second drawback, it is not clear what is meant by sdn-c layer. if it means the control layer, security against what kind of attack needs to clarified further.  apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "traditional networking is way faster (sdns are slower) since the (full) featureset of a switch can be fully offloaded to specialized hardware.\r\non the other hand, sdn is more flexible. while the hardware can't be changed remotely sdns can implement new features quite easily through the open api.\r\n\r\nsdns are also less complex since they are programmed with open apis in high-level programming languages. frameworks can offer very high level interfaces to allow less skilled people to maintain the network.\r\nthis leads to a more complex overall network, since not only the switch, but also the api service has to be hosted highly available to avoid any outages.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.875,
    "feedback": "having all features set while using only a few actually slows down the working of the switch. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\nvery flexible in case of a network protocol change. if another protocol is better suited for a certain application, the routers can be programmed for this (assuring quality of service)\r\nthe switches and routers itself do not have to implement algorithms. their only job is forwarding according to a table the controller provides.\r\n\r\ndrawbacks:\r\nadditional programming overhead. the control logic has to be implemented, which can be difficult in larger networks.\r\npacket loss on connectionless services. to calculate the forwarding table for the switches, the packets are transferred to the control logic to calculate a route.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the stated drawback of packet drops while transferring them to the control logic is not a disadvantage as packets can be retransmitted. additionally, it is unnecessary to forward all packet to the control plane when forwarding tables have been configured for the switches.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "no response.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits: \r\n- api to \u201cprogram\u201d the network: since the network is now \u201csoftware defined\u201d, we may have quite much freedom to program and customise the network to fit any needs in terms of a diverse number of quality of services on the market. \r\n- high-level programming languages: with api for software to define networks on its own, many high-level programming languages could be leveraged and involved in customisation of networks instead of too much being focused on low-level details. \r\n\r\ndrawbacks: \r\n- logically centralisation makes implementation complicated: while the control plane takes virtually all control logic of the devices (router/switch) away from itself and do all the job, that should take a such considerable amount of overhead when it comes to implementing such an optimal control plane. \r\n- cap problem of distributed sdn controllers: trying to build an efficient distributed sdn controller (e.g. in the case of partitioning control plane distribution) could possibly satisfy two of three criteria, i.e. consistency, availability, partitioning tolerance, and these problems in the field of control plane distribution have been invested by current research communities.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.875,
    "feedback": "there is an overlap between the two benefits. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "sdn makes routing much faster, by separating the control and the data plane, so that all the logical computing takes place in the control plane and the data plane is responsible only for forwarding packets. \r\nin traditional networking, each switch must maintain its own routing table and compute the path forward, this slows down packet forwarding. \r\nsdn maintains logical centralization and physical distribution, the logical centralization helps to maintain a consistent global view of the network, the physical distribution ensures that if one component of the system fails, other components can jump in and take over without the system being affected, ie, high availability, and scalability.\r\n\r\n\r\nwhile logical centralization makes the implementation of control logic simpler, it makes the implementation of the controller harder. only 2 out of consistency, availability and partition tolerance can be implemented. \r\na drawback of physical distribution is the required maintenance of redundant components.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the response only states one correct disadvantage of sdn: the cap problem. the drawback of redundant components' maintenance is also an issue in traditional networking. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "sdn allows for easy modification of the network control logic, as configurations can be changed on the fly for the whole network which was not possible with normal switches.\r\nsdn also reduces the switch complexity as forwarding rules, protocols etc. can be implemented dynamically and do not have to be preconfigured into the switches hardware.\r\nsdn enabled switches are often way more expensive than normal switches as they have to employ specialized hardware that allows for fast forwarding and filtering at the same time.\r\nsdns are generally not as decentralized as autonomous switches/routers as they have to be connected to controllers at all time to receive updates on their flow tables while autonomous switches can calculate them themselves.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.625,
    "feedback": "in the second benefit, switch complexity is reduced because the control logic of the switch is moved to the controller, switches still contain forwarding rules. the first drawback is incorrect as sdn switches are cheaper because of less memory requirement. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits of sdn:\r\n- control logic is no longer hard-coded, so it can be modified easier\r\n- logic can be written in a high level language\r\n\r\ndrawbacks of sdn:\r\n- sdn controller is a single point of failure if no backup controller is available, while traditional networking might still work if a device fails\r\n- requires new hardware if data plane device does not support the desired southbound interface protocol or does not support sdn at all, while in traditional networking the control and data plane are guaranteed to be able to communicate with each other",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.875,
    "feedback": "in traditional networking, there is no distinction between control and data plane. it would be more appropriate to speak of \"control logic\". apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\n[1] traditional network infrastructure has limited flexibility. sdn controller helps and assists with easy modification of the network control logic - from \u201chard-coded\u201d logic to exchangeable software. this would enable to program the network at a higher level - \u201cthink of it as a general language or an instruction set that let\u2019s me write a control program for the network rather than having to rewrite all of code on each individual router,\u201d - scott shenker\r\n[2] it helps to reduce switching complexity by removing control logic from switch and host it on servers, and this happens while preserving same forwarding performance.\r\n\r\ndrawbacks:\r\n[1] since functionalities of routers and switches are provided through controller, controller can be vulnerable to security attacks, therefore added extra security features can be an overhead.\r\n[2] sdn is basically not required for small scale networks which have static routes configuration where changes in routes is actually not a requirement. for these kinds of static networks implementation of sdn can be a burden.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "sdn's stated drawback for small-scale networks is not a disadvantage, more of a case exempt from the benefits. instead, the response should elaborate on why sdn implementation can be cumbersome.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "no response.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\n\u2022\tswitch complexity can be reduced since the control logic is removed from switches.\r\n\u2022\twith sdn, modification of the network control gets easier, because before that it was hard-coded and now with sdn it is exchangeable.\r\n\r\ndrawbacks:\r\n\u2022\tto implement sdn in a network, a change in the entire network infrastructure is required, which increases costs.\r\n\u2022\tthe controller is very vulnerable. it manages the whole network so if something happens to it (failure, security issues, ...) it effects the entire network.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "one benefit of an sdn is the easy modification of the network control logic because the logic is not hardcoded anymore. another benefit is the reduced switch complexity because the control logic is removed from the switch and hosted on the servers. a drawback is a significant amount of energy consumption and the limited memory size in switches.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the stated drawback of energy consumption is not a disadvantage as traditional networking hardware also consumes energy. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits of sdn:\r\n1. easy modification of the network control logic\r\n2. reducing the switch complexity\r\n\r\ndrawbacks of sdn:\r\n1. the controller is vulnerable to attacks, which can affect all the switches\r\n2. sdn is new technology which means more unstable\r\n\r\nbenefits of traditional networking:\r\n1. more secure because of the hard-coded nature from the manufacturer\r\n2. more stable because of it is an older and mature technology.\r\n\r\ndrawbacks of traditional networking:\r\n1. limited flexibility. for example in adding new hardwares.\r\n2. increasing the switch or router complexity",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.625,
    "feedback": "the response is partially correct because the stated advantages don't explain how these points are beneficial in comparison to traditional networking. the drawback of security doesn't describe what kind of attacks the sdn controller is vulnerable to.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\n1.) the network protocols are no longer hardcoded logic, but instead exchangeable software. therefore modifications are easily feasible.\r\n2.) the logic is implemented using high-level programming languages. therefore powerful integrated developing environments are accessible.\r\n\r\ndrawbacks:\r\n1.) logical centralization used in sdns makes the implementation of the control logic simpler, nevertheless it complicates the implementation of the controller. \r\n2.) much programming and testing are needed to ensure that controllers and system elements are working together properly.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.875,
    "feedback": "it is true that implementation of sdn controllers is complicated but the response doesn't explain what kind of issues occur during implementation. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\nthe modification of the network control logic is easier to realise since you can change the logic by reprogramming the software instead of having to replace the hardware. \r\nit reduces switch complexity by removing the control logic from the switch and hosting it on servers but still preserving the same forwarding performance.\r\n\r\ndrawbacks:\r\nthe cost of the sdn compatible equipment is really high.\r\nso far it is not a standard, you would be dependent on one company because if there is no standard you can not easily combine parts of the network from different companies.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "no response.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "no response.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits of sdn: 1. software defined-networking leverages increased flexibility; 2. remove the control logic from the switch and host it on the server and preserve same forwarding performance, reduce switching complexity.drawbacks: 1. it requires networking infrastructure changing to support the sdn controller and the protocols. 2. security is a problem",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the first benefit does not provide any example or reasoning behind the flexibility of sdn. the second drawback does not specify why security is a problem or what kind of attack sdn is prone to. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "two of the main benefits of sdn are the following ones: \r\n- first of all, the network control logic can be easily changed and updated, since the administrator does not has to change the logic in all hardcoded (sic!) switches (like in classic networks), but only the software of the control units in the control plane. this plane then communicates the new rules to all switches. \r\n- as it can be concluded from the answer before, the switches at all get less complex and therefore cheaper, since they don\u2019t have to include a complex control logic anymore. they get the entries of their forwarding tables by the control plane and don\u2019t have to figure them out by themselves. \r\n\r\nof course, there are also disadvantages of software defined networking: \r\n- security protection is a major concern in sdn since the complete control logic of the network is centralized in the control plane. so the systems running the control plane gets an interesting target for attacks in order to take over control in the network. \r\n- in order to establish sdn, the existing network needs to be completely reconfigurated - new control units for the control plane and improved switches that can receive control configurations by the control plane. this requires a high investment in the network to get the sdn running.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits of sdn:\r\n- sdn is much more flexible than traditional networks\r\n- switches have less complexity, since all control logic is on the controller and not on the switch itself\r\n\r\ndrawbacks of sdn:\r\n- the controller is vulnerable if not completely secure (this is a problem because the controller is responsible for managing the whole network)\r\n-  lack of hardware security, since all the security provided by routers and switches is not take into account (for example the firewall provided by routers is not used)",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.875,
    "feedback": "the first benefit does not provide any example or reasoning behind the flexibility of sdn.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "it is easier to maintain the networks, due to outsourced services that are administration the different network tasks.\r\nsnd provides redundancy, which makes the network more reliable (controle plane distribution replication)\r\n\r\nwith the new components of the network controller, there is another component, that has to be secured.\r\nin order to implement sdn in an existing network, the whole network has to be redesigned.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.375,
    "feedback": "the first advantage is incorrect because it is unclear how the outsourced services offer easy maintenance. additionally, redundancy is also possible in traditional networks, so it is not advantageous. the drawback of security does not explain why securing the network controller is crucial and problematic.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "+ better routing decisions because of centralized view of the topology.\r\n+ easier expandable as the control logic is managed over the control plane mostly by software.  \r\n\r\n- dependency on control servers. the network can\u2019t adapt when it can\u2019t reach a controller. \r\n- the distributed sdn controller leads to the cap problem where it can only have 2 of the three properties (consistency, availability, partitioning tolerance).",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "no response.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "pro\r\n\r\na benefit of sdns are the freedom to create flexible network control logic and the possibility to use high level programming languages to do so.\r\n\r\nreducing switching complexity by \u201coutsourcing\u201d control logic to servers, but keeping forwarding performance.\r\n\r\ncons\r\n\r\nsdn systems are still a new technology. being a new technology, there are still areas that could use improvement.\r\n\r\nmany soft-ware defined networks can track who and when people make changes, but companies must carefully monitor who has access to the controller and keep access secure.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.875,
    "feedback": "it is true that the sdn is modern technology and needs improvements, but the answer does not specify what kind of improvements are needed. therefore, the drawback is incomplete. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits: 1. by separating control logic from the actual package forwarding, we can simplify switches and at the same time keep the forwarding performance of hardware-based forwarding in switches. 2. but not only is the switch simpler, this change of architecture also allows us to change the control logic later on, without having to replace or modify the many devices that previously each had their own logic. instead we only have to change the single controlling software, making it far more versatile in the long run.\r\n\r\ndisadvantages: 1. if we decide to use centralised controlling, the implementation of the controller is very hard. 2. however, if we choose to use distributed controlling, we run into the well known cap problem, which states that it is impossible to guarantee the three properties \u201cconsistency\u201d, \u201cavailability\u201d and \u201cpartition tolerance\u201d in any distributed system simultaneously.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the response does not explain why a centralized controller would make the implementation harder than distributed controllers. additionally, the response should distinguish between logical centralization and physical distribution.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "no submission.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits of sdn: \r\n- reduce switch complexity (customers are able to configure their hardware without manufacturer-support and can buy the hardware they need, without additional features they might never use but still have to pay for)\r\n - more flexible (control logic performed by hosts which distributes transparency and allows for a global view onto the network)\r\ndrawbacks of sdn:\r\n- security problem of controller and hardware\r\n- cannot defense ddos attack",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the stated drawbacks are incomplete. the first statement did not clarify what sort of security or hardware problem sdn is vulnerable to. stating sdn offers no defense against ddos is not completely correct as sdn has its own way to handle ddos though not to the same extent as traditional networking. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\nno longer need to pay for features which are not used, no longer need hardcoded routing algorithms.\r\nthe routing can be done more efficiently for the needed aspect, as the control plane can calculate a more optimal route than the routers could do themselves.\r\n\r\ndrawbacks:\r\ncurrently not a defined standart just an agreement between firms.\r\nall the devices in the network need to support it.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the second drawback is incorrect as hybrid networks are possible, so one is not required to replace the entire traditional network.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "advantages:\r\n- easy modification of the network control logic, since the hard-coded logic is exchanged into software\r\n- supports high-level programming languages, and thus the user has benefit from powerful integrated developing environments\r\n\r\ndrawbacks:\r\n- single point of failure if the controller becomes vulnerable\r\n- lacking of hardware security e.g. firewalls, since the sdn system eliminated the use of physical hardware such as routers and switches.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "no response.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "separating the data plane and control plane gives the it department an aerial-like view of the entire network, so this makes changes much easier, for example the changes can increase the speed of the entire network and one more benefit is companies have better security, for example the people with access to the controller can clarify secure routes in the system without a firewall to block any invalid routes but security is also a drawback because \u201call eggs are in one basket\u201d- in the sdn controller layer, so if this is compromised the whole network (datacenter ect.) can be controlled by a miscreant.\r\nthe vulnerability of the controller is a problem because the controller is the way that the it-department will manage the network, so that means the controller must be completely secure and software plays a major role in sdn and software has bugs especially new software.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "no submission.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "sdn enables modification of the network control logic instead of hard-coded logic. another benefit is the api to program the network where software defines the network.\r\none drawback is the high cost. another disadvantage is the vulnerability of the controller where the whole network is managed.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the first drawback does not mention why sdn will cost more than a traditional network. it is a generic statement without any explanation. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "sdn allows the user to have more flexibility in comparison to traditional networking techniques by allowing them to define their own protocols adapted to their applications. furthermore, there is a reduction in the complexity of the hardware due to the separation of the control logic from the data plane. this means that the control logic is migrated from the switches to the servers, which leads to a reduction in the cost of the switches.\r\n\r\none drawback of sdn is that the employees need to be schooled to be able to perform sdn and that they need new management tools to be able to do so.\r\nanother problem is the security aspect as everything is handled by the controller and hardware security is missing.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefit 1: software defined networking allows more flexibility, because a device's logic is not hardcoded in the hardware. instead of designing and building a new piece of hardware, with sdn one can simply change the logic by using a high level programming language.\r\nbenefit 2: sdn allows us to source out the control logic of a switch, where performance is expensive, to a server where much more performance is available. this also reduces the complexity of the switch itself, because the logic is handled by the server.\r\ndrawback 1: the cap problem occurs, meaning that with sdn we can only achieve two of the following attributes at a time: consistency, availability, partition tolerance. a prioritization has to be made for each network.\r\ndrawback 2: because the controllers are now responsible for the control logic of the entire network, the controllers get very complex and, in case of a distributed network, even have to handle communication with each other.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "no submission.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\n1. the modification of the network control logic get\u2019s easier since there is a change from \u201chard-coded\u201d hardware logic to exchangeable software.\r\n2. reducing the complexity of implementing control logic by implementing it in a centralized system.\r\n\r\ndrawbacks:\r\n1. the whole network infrastructure needs to support the sdn protocol and\r\ncontroller, including the switches, so the network needs to be reconfigured\r\nentirely.\r\n2. if an attacker gains access to the controller, all switches controlled by the controller will\r\nbe under the mercy of the attacker.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking. note that even hybrids network are possible, so one is not required to replace the entire traditional network.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\n-sdn leverages increased flexibility. traditional network has limited flexibility.\r\n-sdn provides easy modification of the network control logic. it changes from \"hard-coded\" logic to exchangeable software.\r\ndrawbacks:\r\n-if the controller fails, the entire network will be paralyzed.\r\n-reconfiguration from traditional network to sdn increases the costs.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.875,
    "feedback": "the first benefit does not provide any example or reasoning behind the flexibility of sdn.  apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\n- open for introducing new protocols to the network because switches/routers can be programmed very flexibly on how to interprete incoming packets and their headers.\r\n- simpler switching hardware because the switches do not need to maintain routing tables on their own. routing is done centralized and distributed to all switches which must only take of forwarding packets.\r\n\r\ndrawbacks:\r\n- additional infrastructure for the control plane must be installed.\r\n- by moving the control logic to a centralized server you create a single point of failure in the network.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\nin sdn the network logic can be modified easier.\r\nsdn gives a global view over the network.\r\n\r\ndrawbacks:\r\nthe control plane represents a single point of failure since if the control plane fails the sdn can not adapt to changes in the network anymore.\r\nthe load on the sdn controller will be intense if there are too many routers.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.875,
    "feedback": "in the second benefit, how or what benefits are derived by having a global view is not mentioned. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "sdns can integrate higher level languages in the packet control flow and can greatly reduce complexity.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.25,
    "feedback": "both the stated benefits are incomplete. the benefit derived from using high-level language is not stated and which or what component complexity decreases is also not stated. no drawbacks were mentioned.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "empty submission.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\n- flexibility: in sdn, the network logic is not hard-coded in the devices and can therefore be exchanged without hardware replacement.\r\n- complexity reduction: the same performance is possible without the need to create / maintain complex issues locally on the switch / router level.\r\n\r\ndrawbacks:\r\n- if the topology changes, the entire set of optimal paths have to be recomputed centrally. \r\n- for a distributed sdn control plane, it is impossible to achieve a good level of consistency, availability and partition tolerance at the same time (cap theorem).",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "no response.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "+ switches don't have to implement routing protocols, because it's all done by the control logic.\r\n+ protocols can be easily exchanged, as they run in software on the control logic as opposed to the hardware implementation on switches\r\n\r\n- since the controller has to make all decisions, it has to become really \"smart\"\r\n- the cap theorem shows, that there can't be a perfect controller",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the response correctly states the advantages of sdn. however, the drawbacks are partially correct. first, it is true that the sdn controller has to make all the rouging decisions but what kind of problems can occur because of it is not mentioned in the response. second, the cap problem is present in sdn but the explanation is missing.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "the advantages of sdn over traditional networks include the global overview of the control plane over the entire network and the fast and flexible possibility to restructure the network using high-level programming languages if necessary. disadvantages of sdn can be for example the scalability of the switches and the slower adjustment to topology changes. depending on how many switches are integrated in the system, the work of the control plane increases as the switches need to be maintained, patched or upgraded frequently.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the first benefit does not mention what benefit is derived by having a global view of the system. in the second drawback, it is not mentioned how the topology adjustment is slower compared to traditional networking where no such global view is possible. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits: \r\n- the network control logic is easily adaptable, because it is based on software and no more on hardware.\r\n-  in addition, one can program the logic in high level programming languages (and use their ide) and not in hardware description languages\r\n\r\ndrawbacks:\r\n- one has to deal with the cap-problem\r\n- due to the additional layers and distinction of data and control plane, the complextity increases",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "it is always better to explain the abbreviations, like cap, when they are not common. the second drawback is incorrect as there is no additional layer, only separation and abstraction to simplify the network model.  apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:      1.sdn leverages increased flexibility.\r\n                    2.reduced switch complexity.\r\n\r\ndrawbacks: 1.  sdn costs more, in order to implement sdn protocol and sdn controller, it requires complete reconfiguration of the network.\r\n                    2. the controller can be a single point of failure.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.875,
    "feedback": "in the first benefit, parameters or an explanation need to be provided for what makes sdn more flexible than traditional networking. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "in sdn, software is more easy to adapt and exchange since its not hard wired or hard coded. also, it scales better for growing architectures and high lavele languages are useable.\r\n\r\nthe disadvantage is that some kind of controllers are needed.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "scalability as a benefit is not entirely correct as it is under review due to the centralization of the control logic which hampers scaling if multiple components are present. the first drawback does not specify the problem of having a controller. the second drawback is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "two problems of sdn are the control plane distribution, which is still subject of research and that the implemenation of the controllers is fairly complex. benefits are, that we have a way of simply changing or implementing the control logic e.g. routing algorithms also does centralized optimization account for a way faster convergence, which leads to better ressource optimization.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.625,
    "feedback": "the first drawback does not state the problem under research, i.e. the cap problem. additionally, there is no example or reasoning for why the implementation of sdn controllers is complex. two benefits are stated, but the second benefit is stated as an example of the first one. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "the benefits of sdn:\r\n1. reduces switch complexity by removing control logic from the switch and hosting it on servers, preserve the same forwarding performance! switch still supports forwarding in hardware.\r\n2. provide high-level programming languages for the implementation of logic, to benefit from powerful integrated development environments.\r\n3. easy modification of the network control logic. from \u201chard-coded\u201d logic to exchangeable software.\r\n\r\ndrawbacks of sdn:\r\n1. security is a big challenge in sdn: one of the disadvantages of an sdn network is that since you are eliminating the use of the physical routers and switches, you won't have the security that comes with them. the main one that you will be missing is the firewall. this can leave your network more vulnerable if you're not careful. \r\n2. cap problem (i.e. only two out of the three cap properties possible: consistency, availability, partitioning tolerance).\r\n3. it requires a change in the entire network infrastructure to implement sdn protocol and sdn controller. hence it requires a complete reconfiguration of the network. this increases cost due to reconfiguration.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\n- network logic can be easily exchanged/updated\r\n  because the logic is not hardcoded, it can be easily updated to newer versions that support new features or solve problems. updating is easier and cheaper than replacing the hardware.\r\n- high level programming languages\r\n  benefit from powerful development environments and therefore deploy new updates much faster (and probably with more features).  \r\n\r\ndrawbacks:\r\n- vendor lock\r\n  when deploying a sdn, the choice of vendor/manufacturer will have long-term effects on the available network components, because often hardware/software from different vendors can't properly communicate with each other and therefore can't be used inside the same network.\r\n- more expensive\r\n  because of the processing power and generalization needed, the hardware is more complex and therefore more expensive. the cost of software development and support also increases cost. there is also less offerings/demand on the market.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the first drawback regarding vendor lock is more prevalent in traditional networking compared to sdn. so it cannot be accepted as a disadvantage over traditional networks.  apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\nswitches and routers can easily be configured remotely from a logically central server.\r\nthe operator can adapt to newer routing algorithms or types of filters more easily simply by updating the software.\r\ndrawback\r\nif the central control server goes down, it means that the entire network can no longer adapt to changes.  to solve this you have to make sure your central server has high availability, which might be quite challenging.\r\nthe remote control plane might introduce new attack vectors against the system, allowing the attacker to insert sophisticated rules such as packet editing/packet injection.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.875,
    "feedback": "the first benefit does not answer what benefit is derived by transferring the control to the server. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "no submission.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "no response.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "no submission.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "no response.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "easy modification of the network control logic\r\n\r\napi to \u201cprogram\u201d the network\r\n\r\ndrawbacks: consumes significant energy, silicon space\r\n\uf0a7limited memory size in switches (hundreds to hundred thousand entries)\r\n\uf0a7 remember the day of the 512k problem!",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.625,
    "feedback": "the first and second benefits are overlapping. the drawback of energy consumption is incorrect because traditional networking hardware consumes energy as well. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\nreduced switch complexity: by moving as much control logic away from each switch to e.g. a control server the switches are more restricted and won\u2019t have to manage all on their own. this reduces the necessary complexity of the switches by maintaining the same level of performance. \r\noperational control: by centralizing the control logic it is able to influence the overall operations using a single console with the intention of boosting the ability to have better control over task allocation and network traffic.\r\n\r\ndrawbacks:\r\nreliability: if the control server implementing the control logic for the network breaks the whole network will go down.\r\ncap problem: with sdn you will always have a tradeoff between consistency, availability and partitioning tolerance. only two of those properties can be provided at the same time.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "compared to traditional networking, one of benefits of sdn is increased flexibility of the network architecture, it can easily modify the network control logic. the other one is reduced switch complexity, because control logic is removed from switch and hosted on servers.\r\none of drawbacks of sdn is that it is difficult to manage, because there's not a unified industry standard and the program provides by the equipment vendor. the other is, the functional distinction between routers and controllers is still subject to discuss, and functional configuration is still an open question.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the second drawback is the extension of the first drawback. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\nfirstly, sdn provides a centralized view of the entire network that helps to centralize enterprise management and provisioning.\r\nsecondly, sdn can reduce overall operating costs and result in administrative savings since many of the routine network administration issues can be centralized and automated.\r\nthirdly, sdn unifies the cloud resources since networking components that make up massive data center platforms can all be managed from the sdn controller.\r\nfourthly, sdn can help to simplify implementation of control logic which gives consistent global view onto network\r\n\r\ndrawbacks:\r\nfirstly, sdn centralize security control into one point that can be easily attacked. therefore, these controllers will be vulnerable.\r\nsecondly, sdn will have synching of data or data authenticity problem with distributed controller.\r\nthirdly, sdn provides sometime controller redundancy.\r\nfourthly, during deployment of sdn, bugs always exist in software and the tester need much time to test and fix them.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefits:\r\n- the complexity of the switches is reduced, they don't need to support a variety of protocols, they simply use the forwarding tables calculated by the sdn controller.\r\n- the knowledge of the topology of the whole network leads to better route selection, and therefore enables a bigger focus on qos and qoe. \r\n\r\ndrawbacks:\r\n- the controller is a single point of failure, unless you use control plane distribution.\r\n- the controller logic is very complex, because sdn moves the complexity from the switches to the controller. due to this complexity, specialists are required for the controller development and administration.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "the main benefit of sdn is the increased flexibility which comes with the ease of modifying the network control logic. another benefit is the reduced switch complexity while preserving the same forwarding performance on a switch as in traditional networking. \r\na drawback of sdn can be the limited storage capacity of switches, which in turn leads to reactive routing and maybe to a latency (or even dos) problem if many new types of packets belonging to different flows occur. another drawback (if many new packets come in) is in turn the high load on the pyhsical controllers. therefore, multiple controllers have to be in use, which may additionally lead to a consistency problem in short term (since they have to coordinate each other).",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking. note that in sdn based networks, the tcam memory of an sdn switch is considered as a crucial resource constraint in flow rule placement and measurement problems.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "benefit 1: software defined networking allows more flexibility, because a device's logic is not hardcoded in the hardware. instead of designing and building a new piece of hardware, with sdn one can simply change the logic by using a high level programming language.\r\nbenefit 2: sdn allows us to source out the control logic of a switch, where performance is expensive, to a server where much more performance is available. this also reduces the complexity of the switch itself, because the logic is handled by the server.\r\ndrawback 1: the cap problem occurs, meaning that with sdn we can only achieve two of the following attributes at a time: consistency, availability, partition tolerance. a prioritization has to be made for each network.\r\ndrawback 2: because the controllers are now responsible for the control logic of the entire network, the controllers get very complex and, in case of a distributed network, even have to handle communication with each other.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly states the benefits and drawbacks of sdn over traditional networking.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "one benefit of the sdn is the possibility to modify the network control logic easily, because the control logic is no longer \u201chard-coded\u201d in the switches . another benefit is the reduced complexity of the switches with the same forwarding performance. \r\na drawback is that the controller is vulnerable and must be complete secure. another drawback is if sdn is a new technology you need to change your whole system to implement it.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the stated drawback of controller security is partially correct because it does not specify the sdn controller's vulnerabilities. additionally, hybrid networks are possible so that one is not required to replace the entire network.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "what are the benefits and drawbacks of sdn compared to traditional networking,where each switch/router has to manage forwarding and routing on its own? describe two benefits and two drawbacks in 1-2 sentences each. ",
    "student": "the benefits of sdn compared to traditional networking is \r\n1.  sdn increases flexibility. that means the network is built on high-level programming languages and easy modification of the logic. \r\n2. it's an integrated system. that means it is now possible to have a global view of the full system. \r\n\r\nthe drawbacks of sdn are\r\n1. software. the software is one thing sdn depends on, which are prone to failures.\r\n2. security. physical routers bring security/firewall with it; an sdn is, therefore, more vulnerable.",
    "reference": "['benefits:\\n\u25cf reduced complexity of the switches: they only have to act according to their flow\\ntables and do not have to make any local routing decisions.\\n\u25cf due to centralized routing, the routing can converge way faster to a global optimum\\nthan with decentralized routing because of a global view\\n\u25cf better integration of application and network provides a better global view of the\\nsystem.\\n\u25cf increased flexibility :\\n1. we can update the routing logic on the fly, routers/switches are not limited\\nto hard-coded routing algorithms anymore (note: this is also possible with\\nprogrammable switches).\\n2. api to \u201cprogram\u201d the network: software (application) \u201cdefines\u201d the\\nnetwork\\n3. high-level programming languages for implementation of logic and making\\nuse of powerful integrated development environments.\\nnote: in case the reasoning/example sufficiently explains the benefit, naming like reduced\\ncomplexity, increased flexibility can be omitted and response can still be granted 0.25 for\\neach benefit.\\n\\ndrawbacks:\\n\u25cf high complexity of the control servers: they have to make all the routing decisions\\nfor the (sub)network and can therefore be a bottleneck.\\n\u25cf centralized routing in distributed systems in general: the routing completely depends\\non the control server(s). to achieve better availability and fault tolerance, the number\\nof control servers can be increased. however, this can lead to synchronization and\\nconsistency issues. \u2192 cap problem (consistency, availability, partition tolerance)\\n\u25cf new technology adoption challenges:\\n\u25cf switching to sdn from traditional networking.\\n\u25cf training personnel on sdn.\\nall these will cost depending on the reconfiguration level but then for the long term, it\\ndepends upon the roi.\\n\u25cf security-related concerns :\\n\u25cb lack of hardware security: eliminating the use of the physical routers and\\nswitches, one also loses the security that comes with it.']",
    "label": "partially correct",
    "score": 0.625,
    "feedback": "the second benefit does not mention how having a global view is advantageous. additionally, the stated drawbacks are partially correct. not only software, but hardware is also prone to failure. the second drawback implies no security/firewall mechanism being present in the sdn. however, sdn switches can act as firewalls, although they are not hardware replacements.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "no submission.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "control plane distribution can be done by performing replication or partitioning.\r\nwith replication, all requests to the control plane are still served by only one controller, which can be a scalability issue.\r\nwith partitioning, there has to be performed more complex coordination between the parts of the control plane.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "in the class we learned about two control plane distributions, the first one being replication and the second partitioning. the first relays on the dealing with failures, if the primary server fails, the secondary, also called slave, will take over. a downside of this is that the secondary is just there for back up, it won't \u201chelp\u201d the primary as a peer in order to support large-scale deployment.\r\n\r\nthen the partitioning is quite the opposite. we have two different servers with their own partitions, they are peers (coordinated and consistent) and have knowledge about their neighborhood. the downside of it, is that if one of the servers fails, it doesn't have a backup like in the first case.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks. note that coordination and consistency are requirements in partitioning mode.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "-\treplication: holding a backup to take over if the master (primary) is not available. however, this is not an efficient way to use resources.\r\n-\tpartitioning: large networks can be supported more easily while using resources efficiently. however, coordination and consistency have to be managed (creating overhead) and typical p2p issues arise.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "the two modes of control plane distribution are replication and partitioning. on replication, it has openflow standard which allows for connections from switch to multiple controllers. partitioning supports large-scale deployment in which it raises issues similar to peer to peer networks, it contains knowledge of the neighborhood and it has good coordination and consistency.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "partially correct",
    "score": 0.625,
    "feedback": "the replication mode's downside is not stated. partitioning has similar issues as peer-to-peer networks, that is correct. however, the explanation is contradictory as it states coordination and consistency as an advantage instead of a problem. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "the first mode is replication. here, a master/slave architecture is used where one server in the network is the master and the switches act as its slaves. it comes with the drawback that this server might be a single point of failure. however, a secondary master can be used in the network but this can require some overhead in order to be started up.\r\nthe second mode is partition. here, several servers in the network divide their payload of switches they are responsible for. it comes with the drawback that there needs to be additional coordination by these servers in order to make the network reliable.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the downside of the replication mode is incorrect as the slaves are the replicated servers, not the switches and it results in wastage of resources. apart from that, the response is incorrect.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication and partitioning. \r\n\r\nin replication, as long as the primary controller is running, the secondary controller is on standby and not being used. \r\n\r\nin partitioning the coordination between the controllers has to be managed to make sure they have the same and consistent view of the network.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "reactive routing: a lot of requests will be made to the controller (and control network), because of every unknown destination will result in a controller request. \r\n\r\nproactive routing: flow tables in switches/routers may be very big, while the size is limited this can result in problems.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is not related to the question. the two modes are replication and partitioning.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "there is proactive and reactive routing.\r\ndisadvantage of the proactive routing is that it occupies space in the flow table even when there is no traffic over that proactive defined route.  this is bad because there is only a limited size for the table.\r\ndisadvantage of the reactive routing is that there is an delay at the first package because the rout needs to be established. problem with connection-less protocol can send at full speed instantly without warning.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is not related to the question. the two modes are replication and partitioning.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "the two modes of control plane distribution are replication and partitioning.\r\nwith replication you limit you ability to increase scalability and with partitioning you need to solve the problem of coordination and consistency.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "empty submission.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "the 2 modes of control plane distribution are partitioning and replication. one disadvantage for partitioning is the sdn controller needs knowledge about their neighborhood for the coordination.  a disadvantage of the replication mode is that the secondary sdn controller is only in use if the primary fails.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "the two modes of control plane distribution are called replication and partitioning. \r\n\r\nwhen partitions occur, network architectures with separate control and forwarding planes can suffer more severe compromise of functionality than traditional architectures. the consequences of the loss of communication between a forwarding device and its controller include becoming unable to receive instructions for newly arriving flows and being unaware of updates in the routing rules for instance, due to changes in access control policies.\r\n\r\nreplication has the downside of requiring more resources.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "no response.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "the two modes of control plane distribution are replication and partitioning. the downside of replication is that the full network load has to be handled by the primary controller (normally) and can not be balanced between different controllers. the downside of partitioning is that there is a single point of failure if one of the controllers goes down.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "partially correct",
    "score": 0.875,
    "feedback": "in the partitioning drawback, if one controller goes down, only the part of the network for which it is responsible is majorly affected. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication: double the cost of building and maintaining a single controller.\r\npartitioning: the different parts of the controller must coordinate with each other like in peer to peer networks which could reduce speed or consistency.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication needs more hardware than needed most of the time. only if the primary hardware fails, the secondary is needed. \r\n\r\npartitioning needs coordination between the partitions. this increases the complexity and results in overhead.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "one mode is replication and the other one is partitioning.\r\na downside for replication is, that the second (replicated) controller has to be available the whole time and therefore kind of wastes resources as long as it is on standby. also in very large networks the usage of bandwidth to keep the second server up to date could be higher.\r\na downside for partitioning is, that a failure in one of the parts leads to problems in the corresponding part of the network because routing updates are no longer computed and distributed by that failed controller.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "- replication : \r\nin the implemented openflow standard, which are located in the interface of a single switch, there are no aspects of the control plance distribution defined.\r\n\r\n- partitioning: \r\nthe same issues of p2p networks may occur, so the knlowledge of the neighbourhood are necessary or coordination and consistency need to be maintained.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": ": openflow is just an instantiation of sdn, as there are many existing and under-development southbound apis. additionally, openflow offers replication functionality. therefore, the stated replication drawback is incorrect. partitioning has similar issues as peer-to-peer networks, that is correct. however, coordination and consistency are always needed in partitioning.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "1. replication\r\ndownside: scalability problem \u2192 missing load distribution\r\n\r\n[personal note: there are several methods of replication (all equal, single master/slave, multi master/slave, ...), each with its own downsides, so i concentrated on master/slave as the slide 27 did, then the bottleneck with respect to control network load seems to me the more important concern with this setup than consistency coordination.]\r\n\r\n2. partitioning\r\ndownside: no redundancy / availability problem \u2192 single point of failure\r\n\r\n[personal note: coordination of consistency is - in my opinion - a valid downside for both modes, but as the slide 28 suggests that there is no controller backup, availability seems to me the more important concern with this setup than consistency coordination.]",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "partially correct",
    "score": 0.875,
    "feedback": "the response correctly identifies the two modes and their drawbacks. note that the single point of failure is not true because only that part of the network will be affected which was controlled by the failed partitioned controller.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication: all communication goes to one primary controller and in case of a crash there exists a secondary redundant controller as a backup controller. \r\ndrawback: wasting of (unused) resources as the secondary controller is on standby for most of the time\r\n\r\npartitioning: different controllers control different parts of the network. \r\ndrawback: coordination between the controllers i.a. to maintain consistency, is needed",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "- distributed routing \r\nthe network needs time to converge to the optimum due to its distributed way, so there is\r\na lower resource utilization.\r\n\r\n- centralized routing\r\nif the centralized entity fails, the whole system and network fails.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is not related to the question. the two modes are replication and partitioning.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "- replication: waste of resources \u2018only\u2019 for fault tolerance\r\n- partitioning: requires knowledge about neighbors, coordination and consistency",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response is correct as it identifies the modes and the drawback of each correctly.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "2 modes of control plane distribution:\r\n1. replication\r\n- drawback: all communication goes to the primary controller until the primary controller is no longer available so all work must be done by the primary controller until failure\r\n2. partitioning\r\n- drawback: the controllers must implement a protocol for coordination which leads to additional overhead",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication --> larger networks are harder to manage, because there is only one active (primary) controller.\r\npartitioning --> drawback: different controllers have to be coordinated to generate a consistent view of the network.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "the first mode is called replication, in which multiple control plane hosts are available but only one acts, while the others stand by and only come into action if the primary acting host fails. this has the downside that it is inefficient, as the secondary hosts do nothing at all unless the primary fails.\r\nthe second mode is called partitioning, in which the data plane is divided into distributions, which are controlled by their unique control plane host separately. it has the downside that it raises challenges of implementation, as each host needs to coordinate with other hosts on the network and need to have knowledge about the neighbourhood in some way.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "two modes are: 1. replication:in this we have problem of scaling 2.partitioning: it raises issues of coordination and consistency",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response is correct as it identifies the modes and the drawback of each correctly.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "no response.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "the first mode is called replication. a downside here is the redundancy caused by the copied control logic of the slave controller nodes resulting in more memory needed.\r\nthe second mode is called partitioning. the control logic is split up into several parts which need to be coordinated, adding more complexity to the control plane.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response is correct as it identifies the modes and the drawback of each correctly.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "the two modes of control plane distribution are replication and partitioning.\r\na downside of partitioning that its raising issues similar to p2p networks.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "no downside of the replication mode is mentioned. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "1. replication\r\nin this mode, sdn controllers are parallel with each other. if one controller is penetrated by eavesdropper, the whole information of the network structrue can be leaked, because a single controller knows how the network is constructed, which router links to whom and information like this.\r\n\r\n2. partitioning\r\nin this mode, each sdn controller links to some but not all of the routers. therefore if one controller is down, the routers that it links to will be unreachable.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication with a hot standby may have consistency issues due to synchronization between both api nodes/clusters.\r\n\r\npartitioning doesn't has consistency issues, but suffers availability problems, since not every node/cluster has all data available. this leads to higher latency for api calls.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "partially correct",
    "score": 0.875,
    "feedback": "partitioning mode also needs to take care of consistency, namely that the data remains consistent with the neighbouring controllers. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "mode 1 - replication: one primary controller handles all the control logic for the switches, while backup-switches are on standby. \r\ndownside: high load on controller, and if it fails, the backup has to get all the information.\r\n\r\nmode 2 - partition: the control of switches is separated to n controllers, each controlling separate sets of switches. \r\ndownside: a lot of coordination between switches, if one fails, the whole part of the network fails.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "partially correct",
    "score": 0.875,
    "feedback": "there is coordination between different controllers, not switches, in the partition mode. additionally, if a controller responsible for a part of the network fails, only that part of the network is paralyzed. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "no response.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "two modes of control plane distribution: \r\n\r\n- replication: latency issue, since only one primary (master) controller is active at a time, latency for control plane processing might be overloaded due to high workload. \r\n\r\n- partitioning: typical problems in coordination and consistency in normal distributed systems and even in peer-to-peer systems.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication - requires maintenance of additional resources, in case they are required (redundancy). \r\npartitioning - work is required to maintain coordination between the partitioned control panes.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response is correct as it identifies the modes and the drawback of each correctly.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "the two modes of control plane distribution are replication and partitioning.\r\nthe downside to replication is that it does not support large scale deployments as the control traffic congests the network nearby the primary node.\r\nthe downside of partitioning is that all controllers have to coordinate between each other to generate consistent flow tables.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "the two modes are replication mode and partitioning mode.\r\n\r\ndownside of replication mode:\r\nconsistency issues when switching from primary to secondary controller if the last synchronization between them was too long ago.\r\n\r\ndownside of partitioning mode:\r\ncoordination between controllers and assigning controllers to data plane devices causes extra overhead.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "two modes of control plane distribution:\r\n\r\n[1] distributed routing. \r\ndownside: it requires time to converge to optimum route with lower resource utilization.\r\n\r\n[2] logically centralized routing. \r\ndownside: added extra redundancy through controllers - challenges with load distribution between controller instances",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is not related to the question. the two modes are replication and partitioning.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "no response.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "1.\treplication: \r\nthis mode is using two different control plane instances, a primary one (= \u201emaster\u201c) and a secondary one (= \u201eslave\u201c) which is on standby. in case of the master\u2018s failure and only in that case, the slave will take over. \r\nso one of the main downsides is the resource-wasting of the secondary control plane instance because it is mostly running on standby.\r\n\r\n2.\tpartitioning:\r\nin this mode the control plane is split in two parts. both of them are working together and coordinating their actions. so in case of failure of one of these two control plane instances, there will be problems.\r\nthat\u2019s why one of the downsides of this network is the low robustness.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response is correct as it identifies the modes and the drawback of each correctly.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "one control plane distribution mode is the replication where only one server at a time is active and has to handle all data. another control plane distribution mode is partitioning where the whole system is decentralized thus it is difficult to administer.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "the response does not clarify the difficulties when administering a partitioned system. similarly, the drawback of only one server simultaneously in replication does not state how it is a disadvantage itself. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication\r\npartitioning\r\n\r\ndownside of replication : a downtime may happen during the turn over (when the master fails and the slave takes over)\r\n\r\ndownside of partitioning: it can lead to inconsistency if the coordination is mixed up",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "physically distributed controller: has the downside that no standard way of distribution is defined.\r\n\r\nlogical centralization: makes the implementation of the controller hard.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is not related to the question. the two modes are replication and partitioning.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "\u2022\treplication (downside: you need to have more connections)\r\n\u2022\tpartitioning (downside: not completely redundant)",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "partially correct",
    "score": 0.875,
    "feedback": "in the partitioning downside, the actual drawback is availability because there is no redundancy. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "no response.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "no response.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication\r\n\t partitioning",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "only the modes' names are mentioned with no downsides.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "there are two different modes of control plane distribution: \r\n- in replication, you have two exact identical systems running the control plane (master and slave), in which only one of the systems is active all the time. this means a higher amount of work for the operating system as well as decreased efficiency due to the redundancy of the systems. \r\n- in partitioning, you have several systems running the control plane at the same time by splitting up the work for different parts of the network between the cooperating systems. a major downside of this system is, that the systems have to spend work on coordination and keeping up the consistency of their states.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks. note that there can be any number of replicated slaves based on the requirement.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "control plane distribution can be achieved through replication and through partitioning.\r\na downside of replicated model is that all controllers, master and slaves need to store the same information, so that when the master fails, a slave is ready take in.\r\npartitioning requires for the controllers to coordinate between each other, so that there's consistency in the network.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication - master and slave have to be synchronized all time, hight data traffic\r\npartitioning - no backup if one controller dies",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication\r\nbad scalability because each connection has to be doubled for each replication without providing better control over a large network.\r\n\r\npartitioning\r\nservers need to coordinate with each other which leads to similar problems like in p2p.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "no response.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "control plane distribution: replication\r\n\r\nthe primary controller controls the entire network. if it fails, the second controller that was on standby the whole time, jumps in and takes over the job of the primary controller. the disadvantage of this distribution is that you\u2019re wasting resources most of the time, when the primary controller is working.\r\n\r\ncontrol plane distribution: partitioning\r\n\r\nyou have different controllers that divide the network into subnetworks. the controllers communicate with each other through coordination. a disadvantage is that in case of a controller failure you might not be able to address certain end systems.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "we can choose between the mode of replication and the mode of partitioning. replication has the downside of requiring more resources than other strategies. partitioning on the other hand has additional overhead of coordination and consistency.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "no submission.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "- replication (waste of resources \u2018only\u2019 for fault tolerance)\r\n- partitioning (requires knowledge about neighbors, coordination and consistency)",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "the control plane can be distibuted or centralized. \r\ndistributed needs multiple steps to converge to a perfect solution.\r\ncentralized needs to share the path with the router.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is not related to the question. the two modes are replication and partitioning.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication: no real aspects of control plane distribution are defiend due to openflow protocol's nature\r\npartitioning: has similar issues to p2p networks",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "openflow is just an instantiation of sdn, as there are many existing and under development southbound apis. additionally, openflow offers replication functionality. therefore, the stated replication drawback is incorrect. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "no response.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication:\r\n-wasted resources, because the secondary controller is only standby and works if the primary gets down\r\n\r\npartitioning:\r\n-needs protocols to communicate/coordinate with the other parts\r\n-if one parts get down , how will the network part will be controlled?",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "1. replication: one control plane is responsable for the whole network -> complex for big networks\r\n2. partioning: multiple control planes are responsble fo the whole network -> communication between them is needed -> conistency is not given if the communication fails",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "the two modes are replication with the downside redundancy and partitioning with the downside of coordination between the different parts.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 0.75,
    "feedback": "in replication, redundant nodes exist, but the response does not clarify how this can be a downside. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "the two modes of control plane distribution are replication and partitioning. the downside of using replication is the redundancy of controllers (more resources needed) and the increased computational effort one controller has to handle on its own for the entire network. the downside of using partitioning is that an additional protocol and a kind of coordination is required to achieve a consistent view as each part of the control plane has a different view of the data plane.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response is correct as it identifies the modes and the drawback of each correctly.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication: wastes control logic computation power, because one controller is only used for backup. partitioning: needs some kind of coordination to agree on what is a valid data set.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response is correct as it identifies the modes and the drawback of each correctly.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "no submission.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "there is replication and partitioning.\r\n\r\nreplication: replicate the control plane on a second machine, which is only\r\nactive if the first one fails. the downside is that there are costs for the\r\nadditional hardware and running the second machine on standby, without using\r\nthem most of the time.\r\n\r\npartitioning: split the control plane on two machines and communicate\r\nbetween them for coordination. the downside is the overhead from the\r\ncommunication between the two machines to coordinate and maintain\r\nconsistency.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks. note that these modes can have any number of the replicated or partitioned controllers.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "- replication\r\n- partitioning\r\n\r\none downside of replicating:\r\npoor performance\r\none downside of partitioning:\r\nraises issues similar to p2p networks in large-scale deployment",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the downside of replication is incomplete because it does not explain how replication reduces the overall performance. there can be many reasons for poor performance such as the continuous update of redundant controllers with no immediate advantage. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "1. replication (one master and one slave on standby)\r\ndrawback: you need to install at least double the hardware than actually required, because master and slave must be capable of managing the network on their own\r\n\r\n2. partitioning\r\ndrawback: coordination and consistency overhead between the controllers.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "two modes of control plane distribution are replication and partitioning. replication needs a slave controller, which has to have all connections to all routers like the primary plane and most of time it is useless and it creates cost on the machine.\r\none downside of partitioning is that a good coordination and consistency between both parts of of control planes is needed.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "repliaction: ressource heavy\r\nparitioning: common p2p problems",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "empty submission.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication:\r\n- downside: the replicas always have to be synchronized even though the slave is not active, so that it can intervene if necessary\r\n\r\npartitioning:\r\n- downside: the coordination overhead is larger and it is harder to establish a high availability because there is no backup.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "no response.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication: every replica is on standby until the master shuts down/has some sort of problem - every replica on standby is unused hardware.\r\n\r\npartitioning: additional overhead, because the controllers have to communicate with each other.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "the two modes of control plane distribution presented are called replication and partition. with replication, the disadvantage is that a computing unit is in standby and its computing power is not used. the disadvantage of partitioning is that the control plane distributions have to coordinate with other protocols in order to remain consistent and function.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "partitioning:\r\none has to deal with coordination between the parts\r\n\r\nreplication:\r\nproblem: keep synchronization and consistency and who of the parts are the master and who are the slaves (especially with regard to openflow standards which allows connections from switch to multiple\r\ncontrollers)",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication: allows for global view onto the system.\r\n\r\npartitioning:no standard way of distribution defined.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "the stated downside of replication mode is a benefit, not a downside. the question expects the general drawback related to partitioning, like peer to peer network problems. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "the controlers can be distributed with  replication or partitioning.\r\n\r\nthe replication again needs a reliable master, the partitioning has the problem that it needs to know its neighbors.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "replication provides reliability, so it is not a downside of it. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication and partitioning. \r\ndownside of partitioning is, that it raises issues similar to p2p networks, in that it needs an own protocol for communication just between the controllers.\r\nthe downside oder replication is, that you essentially need to have multiple sets of the same hardware, which doesnt increase the computing power, but is just for the case that the master system fails.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "1. replication: there are multiple copies of the routing tables and we have to keep them consistent and that might become a problem.\r\n\r\n2. partitioning: it supports large-scale deployment however it raises issues similar to p2p networks such as the need for knowledge about neighborhood, coordination, and consistency assurance.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "the two modes are (along with one downside each):\r\n\r\nreplication:  \r\nthe secondary sdn controller is only used once the primary one fails, before that it's idling and not being used at all. this introduces redundancy, which reduces the maximum possible network performance. it also adds cost to the network.\r\n\r\npartitioning:  \r\nthere are networking issues similar to a peer-to-peer network (routing, reliability). if one of the sdn controllers should fail, part of the network won't be managed/controlled anymore and will most likely stop working, so the reliability is relatively low.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "control plane distribution: replication - maintaining consistency and state across the replicated nodes is complex and involves high overhead.\r\ncontrol plane distribution: partitioning -  issues similar to p2p networks since there is no centralized controller. partitioned nodes need knowledge about their neighbours to coordinate.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response is correct as it identifies the modes and the drawback of each correctly.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "no submission.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "no response.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "no submission.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "no response.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication : in case of this mode, if the master fails then the control can be taken over by a secondary.\r\nthe downside is over-provisioning as we need to make sure the secondary is always available and that can be connected to when the master fails by replicating the master controls.\r\n\r\npartitioning : in this mode the load is divided by two separate controllers.\r\nthe problem is the synchronization and coordination and the control need to have the knowledge about the neighbour devices.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "the two modes are replication and partitioning. \r\nthe disadvantage of replication are the operating costs. you will have to operate two complex controller (master and slave) where only one at a time (primary) controls the network, the other one (secondary) being on standby waiting for the first to fail. \r\nwith partitioning the downside is, that if one controller breaks part of the network goes down with it. only the part connected and controlled by the other controller is able to run.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "two modes of control plane distribution: replication and partitioning\r\ndownside: \r\nreplication: as the size and dynamics of the network increase, its scalability is limited.\r\npartitioning: forwarding delay between the controllers and the network devices in large-scale networks.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication and partitioning\r\n\r\ndownside:\r\nreplication may create state inconsistences and generate additional delay in case the primary controller fails. at the same time, the size and dynamics of the network will influence the scalability.\r\nin partitioning, there will be some issues that also in p2p networks raises. furthermore, partitioning will be difficult to coordinate and consistent and forwarding delay between the controllers may happen.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication:\r\ndownside: consistency\r\n\r\npartitioning:\r\ndownside: need of coordination",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "the downside of replication mode is the higher traffic to the current master, which also increases the network load in the adjacent nodes.\r\nin contrast, in partitioning mode the load is split between the control plane nodes, but they have to coordinate each other to operate consistently.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication: higher load on primary while the secondaries are on standby\r\n\r\npartitioning: they have to agree on a common routing rules. this means that could be harder to implement consistency and coordination between the controllers",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response is correct as it identifies the modes and the drawback of each correctly.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication\r\n    the slave host is in stand-by, so its capacity is wasted\r\n\r\npartitioning\r\na constant communication between the two parts / controllers is needed (and therefore further protocols are required)",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly identifies the two modes and their drawbacks.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "name the two modes of control plane distribution and name one downside for each of them. ",
    "student": "replication and partitioning are the two modes of control plane distribution. \r\none downside for replication is that in failure, it could cause computation overhead in the slave. \r\none downside for partitioning is that it has similar issues like in a peer to peer network, e.g., each node has to do its own backup.",
    "reference": "['two modes of physical distribution of control plane and associated drawbacks are:\\nreplication\\n\u25cf issue of scalability\\n\u25cf more resources, more cost\\n\u25cf wastage of resources as the replicated node is on standby and no actual load\\ndistribution occurs.\\n\u25cf the problem to keep the data consistent in the replicated node is hard and complex.\\npartitioning\\n\u25cf raises issues similar to p2p networks\\n\u25cf knowledge about neighborhood\\n\u25cf coordination and consistency\\n\u25cf lower availability']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the downside of the replication mode is incorrect. the disadvantage is that slaves are idle when not needed, and that causes wastage of computation power. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "no submission.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the flow tables include entries defining rules for packet handling.\r\nthe meter table includes statistical information.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the meter table collects statistics but the use of the collected statistics, i.e. to achieve certain qos goals, is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables: consist of a list of flow entries,with which we can have an overview of the rules made by the controllers in order to direct the packet flows in sdn.\r\n\r\nmeter table: this one consists of entries that include the meter bands, this one specifies the way the packet should be processed.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the stated meter table functionality did not bring out how the meter band is used for controlling qos operations. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "-\tflow table pipeline: several tables consisting of different flow entries which can be matched against the received packets to get the instruction, i.e. what has to be done with it (e.g. matched with another table, execution of an action like dropping/sending \u2026 )\r\n-\tmeter table: collecting statistics about the packets (e.g. how many were dropped, which path was used the most\u2026) to be occasionally shared with the control plane",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 0.75,
    "feedback": "the response is partially correct because the description of the meter table does not explain how the statistical information is used. the meter table collects statistics to achieve certain qos goals. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "multi-layer switches: forwarding based on layer 2-4 headers.\r\nhardware switches: hardware support for fast matching.\r\nsoftware switches: connect multiple virtual machines to physical interface of host. \r\nhybrid switches: implement sdn and standard l2/l3 forwarding.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is incorrect because the question requirement is to describe the functions of meter and flow tables while the response states different types of switches.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "pipeline of flow tables: matches packets to flow rules and executes actions on a table hit.\r\nmeter table: saves statistics about table entries to allow qos functionality",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "meter table: statistics such as forwarding performance, time of packet inside the switch and other traffic statistics are saved in the meter table. \r\n\r\nflow tables: each flow table has a set of entries (such as matchfield, priority or counter) which govern how a packet is handled and what actions (such as dropping it or forwarding it to a different flow table) are to be executed on it, while moving through the open flow switch.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the meter table collects statistics but the use of the collected statistics, i.e. to achieve certain qos goals, is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the flow tables hold the entries for the packet forwarding. in the meter table is information for statistics stored.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the meter table collects statistics but the use of the collected statistics, i.e. to achieve certain qos goals, is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the flow tables have the information where packages should be routed/forwarded. fore example there are separate tablet if a single package needs to be routed to multiple outgoing ports.\r\nthe meter tables have information about network statistics.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the meter table collects statistics but the use of the collected statistics, i.e. to achieve certain qos goals, is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the function of the flow tables is to find matching packets and deliver the information how to process the current packet.\r\nthe meter tables can contol how often packets get forwarded.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "there are entries or rules against which packets are matched in the flow table, and this is not mentioned in the response. additionally, the response is missing that the meter table has entries for each flow. apart from this, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "empty submission.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "a pipeline of flow tables decides on the basis of matches in each table, what action should be performed with the incoming packet. the meter table is for gathering statistical information about the usage of the switch",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "the response does not mention against \"what\" packets are matched, i.e. against flow entries or rules. the meter table collects statistics but the use of the collected statistics, i.e. to achieve certain qos goals, is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow table: the flow tables allow the devices to inspect incoming packet based on certain filed and take proper action according on the contents of the packet information that has been received. \r\n\r\nmeter table: a meter table allows openflow to create a simple quality of service machanism that measures the rate of a flow and then imposes a specified rate limit.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "no response.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the pipeline of flow tables is used to match different header values of incoming packets to decide which actions should be taken for a packet and where it should be forwarded to.\r\nthe meter table in a switch is used for traffic statistics.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "the response does not mention against \"what\" packets are matched, i.e. against flow entries or rules. the meter table collects statistics but the use of the collected statistics, i.e. to achieve certain qos goals, is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the flow tables inside the pipeline contain multiple different matching rules to decide if a packet should be dropped or where it should be forwarded to at the end of the pipeline.\r\nthe meter table collects data on the rate of packets coming through the switch and may dynamically impose qos operations such as rate-limiting.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.  note that the actions performed in the flow table are not limited to the stated actions.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the flow table entries expect a packet and either forward it to another more specialized flow table or \u2013 if it is already specialized enough \u2013 to an outgoing port. \r\n\r\nthe meter table can measure and control the rate of packets.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "in the flow table's description, it is not clear what is meant by \"specialized\" flow tables. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the flow tables consist of a list of flow entries which basically are some kind of rules which decide what to do with a packet once it arrives, like forward the packet to the next flow table or to a specific outgoing port. therefore they have a match field (to check if a packet matches that entry), a priority (if multiple entries match), a counter, the instructions, timeouts and a table-miss flow entry.\r\nthe meter table is about statistics and allows sending packets to a given meter, for example to limit the packet rate.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables are the parts in the switch which are setting the rules of how to forward data from an input to an output.\r\n\r\nmeter tables store information of statistics and can be used for restrictions, like setting the amount of packets which will be forwarded.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the rules in the flow table are decided upon by the controller, not the switch. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "pipeline of flow tables:\r\nrules (flow entries) got applied on incoming packets defined in each pipeline stage and actions to perform (output packet to port x, drop packet, modify contents, clear action set, ...) are collection into the action set at each stage, whereas the packets can be sequentially passed through multiple stages (flow tables) and the actions can take place either immediately at a stage or after all relevant flow tables have been passed.\r\n\r\nmeter table:\r\nthe table contains rows of entries defining per-flow meters (which can be updated, as well), which can be used to implement quality-of-service operations like rate-limiting.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "a meter table provides meter entries with information of the meters per flow which can be used e.g. to implement simple qos operations like rate-limiting. \r\n\r\nthe flow table provides the \u201crules\u201d (flow entries) to forward an incoming connection to its corresponding out port determined by the information in the packet header.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "-a pipeline of flow tables\r\nan openflow switch matches packets with one or more flow tables. \r\na flow table contains flow entries, and packets are matched (by the openflow switch) based \r\non the matching precedence of flow entries.\r\nthe openflow pipeline processing defines how packets interact with flow tables contained by a switch.\r\n\r\n-meter table\r\nmeters complement the queue framework and monitor the ingress rate of traffic as defined by a flow.\r\nopenflow defines an abstraction called a meter table, which simply contains \r\nrows of meters. these meters can be manipulated in a similar manner to flows. \r\nmeters can receive packets and also (optionally) send packets.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the pipeline of flow tables consists of several flow tables with multiple flow entries each. if such a table gets a packet, the packet gets parsed through every entry to check for a matching condition so that based on the table and the packet, the switch decides what do do with the packed afterwards (pass it to the next table, drop the packed,...)\r\n\r\nthe meter table consists of meter entries, defining per-flow meters.\r\na meter measures an incoming packet rate and performs qos\r\noperations including rate-limiting and diffserv.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the flow tables define the rules in a switch on how to forward packets.\r\nthe meter table is responsible for storing information about statistics.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the meter table collects statistics but the use of the collected statistics, i.e. to achieve certain qos goals, is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the flow table contains the information regarding how a packet should be forwarded. the meter table contains information about statistics (e.g. packet rate).",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the meter table collects statistics but the use of the collected statistics, i.e. to achieve certain qos goals, is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables consists of flow entries. incoming packets can be matched to these entries. once a packet is matched to a flow entry, it is modified according to the instructions defined by the flow entry. so in general, flow tables control the processing of a packet before the forwarding process.\r\naccording to the official openflow documentations, meter tables consists of meter entries, defining per-flow meter entries. meter entries are used to measure and control the rate of packets of specified flows. meter tables act as sort of traffic control.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "pipeline:\r\nit is between the flow tables while working on the routing in the switch.\r\n\r\nmeter table:it comprises all flow data which is used by the controller for switching action.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.25,
    "feedback": "the functionality of the flow pipeline cannot be derived from the response. it is correct that the meter table contains flow data but it is used for network management, not for switching action.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "no response.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the pipeline of flow tables is used for forwarding packets on the switch. the meter table holds collected traffic statistics.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "the flow table contains \"flow entries\" which are used for matching and performing forwarding and other related actions. the meter table collects statistics but the use of the collected statistics, i.e. to achieve certain qos goals, is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "switches implement the data plane which allows packet forwarding. typical multi-layer switches use forwarding based on layer 2-4 headers. hardware switches support fast matching and software switches connect multiple virtual machines to the physical interface of the host. hybrid switches implement the sdn and l2/l3 forwarding.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the question asked for the different types of table functionality, not about different types of switches.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "functions of flow table: makes decision of modification and forwarding of packet.\r\nfunctions of meter table: used for statistics. it could measure and control the rate of packets that correspondent to it.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "in the flow table's description, how the modification and forwarding decisions are made, i.e. by comparing packets with the flow table entries or rules, is not mentioned. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "a flow table is responsible for modifying packets upon their l2-4 header fields and thus also routing the packets to different ips, vlans etc.\r\na meter table is responsible for meter traffic rates and limiting them, so it is able to store counter based on matching traffic while a flow table only operates stateless based on matches.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables: passing packets from an input port to an output port, defined by instructions\r\nmeter tables: e.g. limiting the rate a packet is forwarded",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the meter table's description does not explain how the meter table limits the forwarding packet rate. meter tables collect flow statistics and use them to perform qos operations, including rate-limiting and diffserv. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "no response.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the pipeline of flow tables:  to support an entire switching pipeline of a typical hardware switch, then more switching functionalities and matching rules are supported when maintaining not only one flow table but also a sequence of flow tables (how to forward packets, outgoing ports for every packet). \r\n\r\nmeter table: is used to measure network statistics, which simply contains rows of meters and these meters can be manipulated in a similar manner to flows.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "i could not ascertain from the question whether to sumarize the different types of switches or tables, hence, i have provided both: hardware switches: support specific data structures that are used to make forwarding very fast software switches: virtual switches, that connect multiple vms to physical interface of the host. hybrid switches: are used to implement a sdn and standard l2/l3 forwarding. flow tables are like routing tables, where routes are defined in terms of flows. each flow table contains flow entries. meter tables are also contained within a switch. they provide additional functionality, like statistics.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the meter table collects statistics, but the use of the collected statistics, i.e. to achieve certain qos goals, is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the flow tables in the pipeline consist of entries of actions and instructions that are applied to an incoming packet with which packets can be filtered, modified or dropped. the meter table collects metrics about incoming packets and can notify/be queried by other switches/controllers to show statistics about drop rates, forward rates, buffer health and more metrics.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow table pipelines define what to do with incoming packets.\r\n\r\nthe meter table stores statistics.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "how the flow table defines its action is based on the flow entries or rules configured by the controller. the meter table collects statistics but the use of the collected statistics, i.e. to achieve certain qos goals, is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "a flow table contain mechanisms for executing and maintaining flow entries (with stored rules) through controller, and pipeline of flow tables enable controlling and directing the packet flows through sdn. \r\n\r\nmeter tables help to monitor the incoming rate of traffic as defined by a flow, and based on the rate of packet flows, it can perform certain actions or operations on it.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.  note that the actions in meter tables are related to qos.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "no response.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the flow tables consist of a list of flow entries (match field, priority, counters, instructions, timeouts, table-miss flow) so whenever a packet arrives at one of these flow tables, it will be matched to an entry and the flow table then knows what to do with this packet to ensure fast and dynamic routing.\r\ncompared to that, the meter table is a table for statistics.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the meter table collects statistics, but the use of the collected statistics, i.e. to achieve certain qos goals, is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables have multiple matching rules in order to decide what happens to the packets if it gets forwarded, skipped, or drop.\r\nthe meter table is a table for statistics, which contains for example the number of packets which are forwarded and many more statistics.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the meter table collects statistics, but the use of the collected statistics, i.e. to achieve certain qos goals, is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow table: it determines what to do with the incoming packet, like forward it to the next flow table or send it to output port or even drop it.\r\nmeter table: it measures the rate of packets assigned to it and enable controlling the rate of those packets",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "in the flow table's description, how the modification and forwarding decisions are made, i.e. by comparing packets with the flow table entries or rules, is not mentioned. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables:\r\nstore a list of flow entries which contain information about the traffic characteristics and are handed over from the controller to the network elements. \r\n\r\nmeter table: stores meter entries, defining per-flow meters.  a meter measures the rate of packets assigned to it and enables controlling the rate of those packets.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the entries in the flow table are used for matching packet fields and performing actions accordingly. this is not mentioned. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "a flow table consists of a list of flow entries which are used to compare to the headers of the incoming packets according to which entry it is identical the packet will be handled in the way it is set in the entry.\r\n\r\nthe meter table is used to store statistics.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the meter table collects statistics, but the use of the collected statistics, i.e. to achieve certain qos goals, is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "no response.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "no response.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "a pipeline of flow table aims to match the packets and decide how to forward the packets.meter table: a meter table consists of meter entries, defining per-flow meters. meter table is used to limit traffic rate",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the response does not mention against \"what\" packets are matched, i.e. against flow entries or rules. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the task of the flow table pipeline is to implement all rules regarding the process of forwarding in the switch - every packet has to enter this pipeline and gets further routing instructions in each table, for example to move to the next table in pipeline or to leave the switch on a specified port. \r\nthe meter table holds information about what to do with packets if certain meters or thresholds in data transfer rate are reached, for example discarding packets or sending them to a special outgoing port.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of table",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the flow tables have the information about what the switch/router has to do when a packet comes in. when a packet pass one flow table goes to the other and so one until the end of the pipeline.\r\na meter table has statistics information and can have information about what to do when a packet needs to be forward on multiple outputs.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the meter table collects statistics, but the use of the collected statistics, i.e. to achieve certain qos goals, is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow table: part in the switch that sets/contains the rules to forward data from in-port to out-port.\r\nmeter table: creates simple qos mechanism to provide statistics",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables\r\nflow tables stores rules on what to do with an incoming package. they can for example forward the package to the next table or to a specific output port.\r\n\r\nmeter table\r\nthe meter table stores statistical information which can be used to measure the flow rate for example.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the meter table not only measures but also limits the flow rate. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "no response.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables consist of flow entries which the controller can add, update, and delete. \r\nthe meter table has a meter entries and per flow meters.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "the response does not mention the end functionality of the flow table, which is to perform forwarding based on the flow entries, and of the meter table, which is to fulfill qos goals. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables define patterns for matching packets (flow entries) and how packets ought to be modified and forwarded. a meter table monitors the rate of packets for quality of service reasons and can prioritise or drop packets, depending on current needs.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "no submission.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the pipeline of flow tables consists of several flow tables with multiple flow entries each. if such a table gets a packet, the packet gets parsed through every entry to check for a matching condition so that based on the table and the packet, the switch decides what do do with the packed afterwards (pass it to the next table, drop the packed,...)\r\n\r\nmeter table consists of meter entries, which define per-flow meters, to measure and control the rate of packets. a meter measures an incoming packet rate amd performs qos operations.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the flow tables are used to match certain properties in order to determine their path. meter tables are used for statistics.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "the response does not mention against \"what\" packets are matched, i.e. against flow entries or rules. the meter table collects statistics, but the use of the collected statistics, i.e. to achieve certain qos goals, is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "typically multi-layer switches: forwarding based on layer 2-4 headers\r\n\r\nhardware switches: hardware support for fast matching\r\n\r\nsoftware switches: connecting of multiple virtual machines to physical interface of host\r\n\r\nhybrid switches: implementation of sdn and standard l2/l3 forwarding",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the question asked for the different types of table functionality, not about different types of switches.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "no response.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow defines a connectivity and flow tables is the part in the switch which is saying the rules how to forward something from an in port to an out port so its just a table consisting many rules and the rules say, for the specific flow you do a match on the packet header and look how to forward it to the out-going port.\r\nmeter tables are tables for statistic and it allows openflow to create a simple qos mechanism that measures the rate of a flow and then imposes a specified rate limit.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow table: contains entries for redirecting the incoming packets \r\nmeter table: consists of entries for defining flows for realizing for example qos operations",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the response is partially correct as the flow table can perform more actions on the packet than just redirecting the packet.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables contain the information how to forward packets. meter tables monitor the ingress rate of traffic where the table can execute some operations.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the possible operations are related to qos, like rate limiting. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the pipelined flow tables declare what to do with incoming packets according to the rules in the flow tables. for example they specify whether to forward a packet to a specific port or to drop it (because of firewalls). the meter table contains network statistics used for rate limitation for example.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables consist of a finite number of flow entries and store the rules that get populated by the controller for controlling and directing packet flows (forwarding) in sdn. meter tables: is used for statistics and contains rows of meters. these meters are attached to flow entries and are used to measure and control the rate of all the flow entries to which it is attached. (used for statistics).",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "no submission.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables contain flow entries that match certain packets and apply instructions for modification and forwarding on them.\r\n\r\nthe meter table consists of meter entries, defining per-flow meters, which enable sdn to implement various simple qos operations, such as rate-limiting.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables store the rules populated by the controllers for controlling and directing the packet flows in sdn.\r\nmeter table is a switch element which measures and controls the ingress rate of packets which is the rate of packets prior to the output",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables contain instructions what to do with incoming packets regarding their routing and maybe content modification.\r\nthe meter table contains statistical data, e. g. counters how often forwarding rules have been applied to incoming packets to improve qos.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "pipeline of flow tables:\r\ndefines the rules on how to forward something.\r\nmeter table is used for statistics.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "in the flow table, rules are defined to forward packets/frames, not something. the meter table collects statistics, but the use of the collected statistics, i.e. to achieve certain qos goals, is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow table: process the traffic flow by comparing against specific rules.\r\nmeter table: allows quality of service by applying a rate limit.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "empty submission.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables: they contain a set of rules on how to deal with incoming messages (based on matching conditions).\r\n\r\nmeter table: this table stores information about the network usage.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the meter table stores information about the network usage but the use of the collected information, i.e. to achieve certain qos goals, is not stated.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "no response.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "pipeline of flow tables: each table holds forwarding rules, that are applied sequentially to packets passing through.\r\n\r\nmeter table: sets a limit for the rate at which certain packets are sent.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "in the meter table, there is a meter entry per-flow that collects statistics, which is not mentioned. these statistics are used for limiting sending rates among other things. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables contain rules, defined by the controller, that incoming packets are matched against to decide how the packet should be handled / where the packet should be forwarded to. meter tables on the other hand store statistics about the processed packets, to build additional functionality like rate limiting.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "if a packet arrives at a switch, it  passes on through several flow tables (so scaling is possible). the route and the actions with the packet through the flow tables is determined by rules and if or if not a packet matches the matching field in the tables. \r\nthe meter tables determines due to the meter id to which meter (e.g rate limitation) a packet shoud be sended. it allows the open flow protocol a simple qos mechanism.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables store many rules and decide where the packet should be forwarded to.\r\nmeter table is used for statistics, and it monitors the ingress rate of traffic and performs some operations based on the rate.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables are used to map incoming packages to their attributes such as count, match,  timeouts...\r\n\r\nmeter tables associate entries to the flow table and manage the rate of the matching flow with attributes such as band type, burst etc.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the end goal of the flow table is forwarding the packets, not just mapping. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "no response.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow table: stores the rules populated by the controllers for controlling and directing the packet flows in sdn.\r\n\r\nmeter table: a meter table consists of meter entries, defining per-flow meters. per-flow meters enable openflow to implement various simple qos operations. a meter measures the rate of packets assigned to it and enables controlling the rate of those packets.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow table pipeline:\r\nthe packets are sent trough the pipeline, consisting of multiple flow tables, where each flow table can modify the packet and queue actions to be executed at the end of the pipeline.\r\n\r\nmeter table:\r\nis used to create a simple quality of service mechanism based on the rate of flow, each line consits of an identifier, meter bands (rate and instruction for processing a package) and a counter.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "each flow table contains entries that are used for packet matching. this is not mentioned but it is essential. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables contain flow entries that dictate the routing action to be taken when packets matching the flow entry are encountered.\r\nmeter tables contain meter entries that enable openflow devices to implement qos features such as rate-limiting.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "no submission.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "no response.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "no submission.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "no response.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "empty response.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "incorrect",
    "score": 0.0,
    "feedback": "the response is an empty submission.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the packets move through the pipeline of flow tables with multiple matching rules to finally decide where the packet should be forwarded to, whether it should be skipped or dropped, etc. \r\nthe meter table is a table for statistics.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the meter table collects statistics, but the use of the collected statistics, i.e. to achieve certain qos goals, is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the function of the flow table is to control the flow of packets, in other words that is the forwarding of data packets.\r\nthe function of the meter table is to measure and control the rate of packets.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.75,
    "feedback": "the flow table controls the flow of packets based on the flow table entries or rules against which packets are matched. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow table works like a routing table, pipeline processing always starts at the first flow table. the packet is first matched against flow table 0. other flow table may be used depending on the outcome of the match in the first table. flow table stores the rules populated by the controllers for controlling and directing the packet flows in sdn and consists of a list of flow entries identified by its match fields and priority. flow entry includes match fields, priority, counters, instructions, timeouts and cookie.\r\n\r\nmeter table consists of meter entries which includes meter identifier, meter bands and counters, defining pre-flow meters that enable openflow to implement various simple qos operations. a meter measures the rate of packets assigned to it and enables controlling the rate of those packets.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "the flow tables are responsible for determination where a packet should be forwarded to.\r\n\r\nthe meter table contains statistics for different purposes, for example how many packages have been routed over.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "partially correct",
    "score": 0.5,
    "feedback": "how the flow table determines where the packet should be forwarded, is based on the entries or instructions present in it(not stated). the meter table collects statistics, but the use of the collected statistics, i.e. to achieve certain qos goals, is not stated. apart from that, the response is correct.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables consist of entries which match an arriving packet and define the modifications to be taken on the packet (i.e. forwarding rule).\r\nthe meter table consists of meter entries and is a table for statistics and enables quality-of-service operations, such as rate-limiting.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow table - a packet is inspected and based on rules in the flow table (flow entries) either forwarded to an outgoing port, the next flow table or simply dropped.\r\nmeter table - meter tables contain the flow rate of packets, which can be used for quality-of-service or rate-limiting.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response answers the flow table functionality correctly, though the actions performed are not limited to the stated actions.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables tells the switch, where to forward the incoming packet by using a match field and checking the headers.\r\nthe meter table on the other hand is used to assure the qos of the system by telling the system what to do with a certain packet if a specific transmission rate is exceeded.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  },
  {
    "question": "in an sdn, switches maintain a pipeline of flow tables and a meter table. summarize their respective functions in one sentence each. ",
    "student": "flow tables define rules on how to forward packages from an import to an outport. \r\nmeter tables handle statistics by measuring the rate of flow and estimates a flow limit.",
    "reference": "['meter table: collects flow statistics or contains meter entry per flow (0.25) which is taken into account by the controller for management of the network like qos operation(rate-limiting being one of them).\\nflow pipeline: consists of flow tables that contain \u201crules\u201d or fields (0.25) for packet forwarding(0.25) /actions to be taken on the packets or in other words it implements the\\nrouting logic in the switch']",
    "label": "correct",
    "score": 1.0,
    "feedback": "the response correctly answers the functionality of both types of tables.",
    "pred_label": "error",
    "pred_score": "error",
    "pred_feedback": "error"
  }
]